[{"path":"http://usgs-r.github.io/EGRETci/CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributions - interactions surrounding- project abide USGS Code Scientific Conduct. contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http:contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"http://usgs-r.github.io/EGRETci/DISCLAIMER.html","id":null,"dir":"","previous_headings":"","what":"Disclaimer","title":"Disclaimer","text":"software preliminary provisional subject revision. provided meet need timely best science. software received final approval U.S. Geological Survey (USGS). warranty, expressed implied, made USGS U.S. Government functionality software related material shall fact release constitute warranty. software provided condition neither USGS U.S. Government shall held liable damages resulting authorized unauthorized use software.","code":""},{"path":"http://usgs-r.github.io/EGRETci/articles/EGRETci.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to EGRET Confidence Intervals","text":"package EGRETci implements set approaches analysis uncertainty associated WRTDS trend analysis implemented EGRET package. various functions included discussed bootstrap method estimating uncertainty water quality trends Hirsch, Archfield, De Cicco, 2015 EGRETci package designed interactive batch use. Instructions included vignette. package allows users set Period Analysis, various smoothing parameters WRTDS. Users consult EGRET vignette background issues. extensive documentation refer EGRETci EGRETci package designed carry four types tasks. Evaluate water quality trend specific span years produce variety tabular results. done short workflow involving functions: trendSetUp wBT. results come three forms: 1) console output, shows bootstrap replicate process underway results finished, 2) text file shows results bootstrap analysis (subset included console output), 3) set outputs named list called eBoot. contents eBoot described . Plot histograms values trend magnitudes, expressed percent change specified period, flow-normalized concentration flow-normalized flux. done function plotHistogramTrend. depends outputs contained eBoot. Note number custom outputs similar histograms can developed contents eBoot (example, likelihood flow normalized flux decreased 2000 kg/year trend period). analyses require small amount script writing user. Plot confidence bands around computed trends flow-normalized concentration flow-normalized flux. done using function called ciCalculations , using output function running two functions produce confidence band graphics concentration flux respectively (plotConcHistBoot, plotFluxHistBoot). Create prediction intervals around estimated concentration flux values specific days, months, years. estimates interest WRTDS_K. detailed description estimates can made provided vignette WRTDS Kalman Prediction Intervals.","code":""},{"path":"http://usgs-r.github.io/EGRETci/articles/EGRETci.html","id":"required-data-frames","dir":"Articles","previous_headings":"Introduction","what":"Required Data Frames","title":"Introduction to EGRET Confidence Intervals","text":"following table provides definitions four data frames constitute named list eBoot also data frame called caseSetUp (created trendSetUp function), contains number important parameters define way test implemented. presented .","code":""},{"path":"http://usgs-r.github.io/EGRETci/articles/EGRETci.html","id":"wrtds-bootstrap-test","dir":"Articles","previous_headings":"","what":"WRTDS Bootstrap Test","title":"Introduction to EGRET Confidence Intervals","text":"WBT (WRTDS Bootstrap Test) can run interactively batch. Regardless approach used, user wishes use non-default values parameters model estimation period analysis need set running code. example: period analysis anything Water Year (paStart=10, paLong=12), user must use setPA function. example want analysis three months starting April, command eList <- setPA(eList, paStart = 4, paLong = 3). desired value windowY 10 rather default value 7, command needed eList$INFO$windowY <- 10, similar commands can used windowQ, windowS, minNumObs, minNumUncen edgeAdjust (see help page modelEstimation EGRET package). parameters set (requires action user defaults used) set commands interactive processing (using example data set Choptank_eList): Two sets outputs created, text file documents results WBT, RData file (created saveEGRETci function) saves relevant results data frames use plotHistogramTrend function (described ) user-specified post-processing functions. output outputText.txt looks like : run wBT batch mode difference script call trendSetUp include needed bootstrap parameters. , let’s assume want use example data set Choptank_eList PA December, January, February March, wanted set windowY = 10 minNumObs = 50, smoothing parameters default values. want run trend analysis 1990 2012, use maximum 50 replicates, minimum 39 replicates, block length 200. script : result creation text file called outputText.txt, RData file called output.RData. RData file contain objects caseSetUp, bootOut, wordsOut, xConc, xFlux, INFO. files located working directory.","code":"library(EGRET) library(EGRETci) eList <- Choptank_eList  #Interactive function to set up trend analysis: caseSetUp <- trendSetUp(eList) eBoot <- wBT(eList,caseSetUp,               fileName = \"outputText.txt\")  #Interactive save output function: saveEGRETci(eList, eBoot, caseSetUp) Choptank River    Inorganic nitrogen (nitrate and nitrite)   Water Year    Bootstrap process, for change from Water Year 1985 to Water Year 2010                    data set runs from Water Year 1980 to Water Year 2011   Bootstrap block length in days 200   bootBreak is 39  confStop is 0.7   WRTDS estimated concentration change is   0.444  mg/L  WRTDS estimated flux change is          0.03593  10^6 kg/yr  Should we reject Ho that Flow Normalized Concentration Trend = 0 ? Reject Ho  best estimate is   0.444 mg/L   Lower and Upper 90% CIs    0.308    0.506  also 95% CIs    0.201    0.512   and 50% CIs    0.397    0.472  approximate two-sided p-value for Conc      0.05 * Note p-value should be considered to be < stated value  Likelihood that Flow Normalized Concentration is trending up =      0.988  is trending down =     0.0125  Should we reject Ho that Flow Normalized Flux Trend = 0 ? Reject Ho  best estimate is  0.03593 10^6 kg/year   Lower and Upper 90% CIs   0.0211   0.0452  also 95% CIs   0.0197   0.0456   and 50% CIs   0.0309   0.0390  approximate two-sided p-value for Flux      0.05 * Note p-value should be considered to be < stated value  Likelihood that Flow Normalized Flux is trending up = 0.988  is trending down= 0.0125   Upward trend in concentration is highly likely   Upward trend in flux is highly likely  Downward trend in concentration is highly unlikely   Downward trend in flux is highly unlikely library(EGRET) library(EGRETci) eList <- Choptank_eList eList <- setPA(eList, paStart = 12, paLong = 4) eList$INFO$windowY <- 10 eList$INFO$minNumObs <- 50 caseSetUp <- trendSetUp(eList,                          year1=1990,                          year2=2012,                          nBoot = 50,                          bootBreak = 39,                          blockLength = 200) eBoot <- wBT(eList, caseSetUp, fileName =\"outputText.txt\") saveEGRETci(eList, eBoot, caseSetUp, fileName = \"output\")"},{"path":"http://usgs-r.github.io/EGRETci/articles/EGRETci.html","id":"histograms","dir":"Articles","previous_headings":"WRTDS Bootstrap Test","what":"Histograms","title":"Introduction to EGRET Confidence Intervals","text":"function plotHistogramTrend plots histogram trend magnitudes (expressed percentage change selected period) full set replicates created wBT. magnitudes stored eBoot list. histograms serve purpose providing graphical impression central tendency uncertainty size trend. can used help answer questions like: “sure trend positive?” “sure decrease least 20% decrease period interest?” plotHistogramTrend function can produce histograms either Flow Normalized Concentration Flow Normalized Flux. creating histogram important carefully determine “bins” use. plot good idea make sure plot covers range negative positive values even though might case entire range trend magnitudes positive (negative). function set defaults setting 10 bins bins set cover full range magnitudes least cover magnitudes low -10% high +10%. bins set based minimum value (xMin), maximum value (xMax), step size (xStep). defaults used initial run can simply leave three arguments produce plot. first plot suitable publication display, intended guide analyst set three arguments produce suitable plot. Ultimately want plot characteristics: value xStep integer 5, 10, 20 width bins 5%, 10% 20%. xStep small enough histogram looks relatively smooth. small histogram bars tend irregular. xStep large poor resolution shape distribution. smooth histogram desired analyst needs run wBT function high number replicates (say nBoot = 200). value xStep less minimum value observed set bootstrap replicates. xMin negative integer multiple step size. values negative, setting -1 times xStep good choice. xMax larger maximum value set bootstrap replicates positive integer multiple xStep. positive values 1 times xStep good choice. Note plots always show vertical solid line 0% trend, simply point reference “trend” result. also show dashed vertical line value ordinary WRTDS estimate trend magnitude percent. vertical line fall near median value bootstrap replicates. initial run give analyst basic information needed set good set values xMin, xMax xStep.   seen initial versions plot one can run functions set arguments produce plot suitable presentation publication. Alternatively, two plots can shown side--side using workflow. Use par function set functions plot side--side:  :","code":"library(EGRET) library(EGRETci)  # Example data included in package: eList <- Choptank_eList # Example data from EGRET package eBoot <- Choptank_eBoot caseSetUp <- Choptank_caseSetUp  #Concentration an initial run: plotHistogramTrend(eList, eBoot, caseSetUp,                      flux=FALSE) #Flux an initial run: plotHistogramTrend(eList, eBoot, caseSetUp,                    flux=TRUE) par(mfrow=c(1,2)) #Concentration, presentation version: plotHistogramTrend(eList, eBoot, caseSetUp,                      flux=FALSE, xMin = -5, xMax = 65, xStep = 5)  #Flux, presentation version: plotHistogramTrend(eList, eBoot, caseSetUp,                    flux=TRUE, xMin = -5, xMax = 55, xStep = 5) # To return to figures printing in 1 row, 1 columns: par(mfrow=c(1,1)) par(mfrow=c(2,1)) #Concentration, presentation version: plotHistogramTrend(eList, eBoot, caseSetUp,                      flux=FALSE, xMin = -5, xMax = 65, xStep = 5)  #Flux, presentation version: plotHistogramTrend(eList, eBoot, caseSetUp,                   flux=TRUE, xMin = -5, xMax = 65, xStep = 5,                   printTitle = FALSE) # To return to figures printing in 1 row, 1 columns: par(mfrow=c(1,1))"},{"path":[]},{"path":"http://usgs-r.github.io/EGRETci/articles/EGRETci.html","id":"introduction-1","dir":"Articles","previous_headings":"Confidence Bands","what":"Introduction","title":"Introduction to EGRET Confidence Intervals","text":"purpose produce graphic looks just like produced plotConcHist plotFluxHist addition confidence bands around flow-normalized histories. two versions workflow confidence bands, first just uses single computer core means takes long time run (jobs can take hour ), simple run. uses function ciCalculations can run interactively batch. Two scripts provided . best done Terminal window, rather console. run console make impossible work R take place job running. second way can done using parallel computing R. script purpose provided. require three extra packages installed (foreach, doParallel, iterators). also best run Terminal, run console, R work can done running.","code":""},{"path":"http://usgs-r.github.io/EGRETci/articles/EGRETci.html","id":"preliminary-steps","dir":"Articles","previous_headings":"Confidence Bands","what":"Preliminary Steps","title":"Introduction to EGRET Confidence Intervals","text":"Regardless approach (single core parallel) taken computations, user needs set non-default values parameters model estimation period analysis. example: period analysis anything Water Year (paStart=10, paLong=12), user must use setPA function. example want analysis three months starting April, command eList <- setPA(eList, paStart = 4, paLong = 3). desired value windowY 10 rather default value 7, command needed eList$INFO$windowY <- 10, similar commands can used windowQ, windowS, minNumObs, minNumUncen edgeAdjust (see help page modelEstimation). imperative standard WRTDS trend analysis run prior running code confidence bands. user made changes smoothing parameters modified data way since last time modelEstimation run, standard running modelEstimation must done output saved eList. commands :","code":"eList <- modelEstimation(eList)"},{"path":"http://usgs-r.github.io/EGRETci/articles/EGRETci.html","id":"simple-workflow","dir":"Articles","previous_headings":"Confidence Bands","what":"Simple Workflow","title":"Introduction to EGRET Confidence Intervals","text":"example workflow assumes use default values model parameters PA uses example eList provided package. Remember, long-running process: run ciCalculations function batch mode, difference additional arguments specified call function. example call ciCalculations might read follows: long required arguments (nBoot, blockLength, widthCI) specified interaction needed.","code":"library(EGRET) library(EGRETci)  eList <- Choptank_eList  CIAnnualResults <- ciCalculations(eList)  save(eList,CIAnnualResults, file=\"CIAnnualResults.RData\") CIAnnualResults <- ciCalculations(eList, nBoot = 100, blockLength = 200, widthCI = 90)"},{"path":"http://usgs-r.github.io/EGRETci/articles/EGRETci.html","id":"parallel-computing","dir":"Articles","previous_headings":"Confidence Bands","what":"Parallel Computing","title":"Introduction to EGRET Confidence Intervals","text":"Taking advantage foreach package parallel computing:","code":"library(foreach) library(doParallel) library(iterators) library(EGRET) library(EGRETci)  eList <- Choptank_eList eList <- modelEstimation(eList)   nBoot <- 100 blockLength <- 200 coreOut <- 1 #Number of cores to leave out of processing tasks  widthCI <- 90 ciLower <- (50-(widthCI/2))/100 ciUpper <- (50+(widthCI/2))/100 probs <- c(ciLower,ciUpper)  nCores <- detectCores() - coreOut cl <- makeCluster(nCores) registerDoParallel(cl) repAnnual <- foreach(n = 1:nBoot,.packages=c('EGRETci')) %dopar% {    annualResults <- bootAnnual(eList,                                 blockLength,                                startSeed = n)   } stopCluster(cl)                 # save(repAnnual, file=\"repAnnual.RData\")  CIAnnualResults <- ciBands(eList, repAnnual, probs) save(eList,CIAnnualResults, file=\"CIAnnualResults.RData\")"},{"path":"http://usgs-r.github.io/EGRETci/articles/EGRETci.html","id":"ci-result-plots","dir":"Articles","previous_headings":"Confidence Bands","what":"CI Result Plots","title":"Introduction to EGRET Confidence Intervals","text":"Regardless way computations done outputs needed graphics contained eList CIAnnualResults (either script end file called CIAnnualResults.RData). file loaded graphics can produced using functions plotConcHistBoot plotFluxHistBoot. functions require two arguments (eList CIAnnualResults). However, user can specify number arguments. arguments ones used plotConcHist plotFluxHist functions base EGRET package. user can also view table confidence interval values shown graphics simply using command CIAnnualResults (fluxes units kg/day). script producing graphics, using example eList CIAnnualResults data frames included package.","code":"eList <- Choptank_eList  CIAnnualResults <- Choptank_CIAnnualResults  plotConcHistBoot(eList, CIAnnualResults) plotFluxHistBoot(eList, CIAnnualResults)"},{"path":"http://usgs-r.github.io/EGRETci/articles/Enhancements.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Guide to EGRETci 2.0 enhancements","text":"vignette documents set enhancements EGRETci software package. EGRET “Exploration Graphics RivEr Trend” developed Robert M. Hirsch Laura DeCicco U.S. Geological Survey. EGRETci package contains functions can used evaluate uncertainty associated results generated EGRET code. document, EGRETci 2.0 enhancements assumes reader already good understanding WRTDS (Weighted Regressions Time Discharge Season), EGRET 2.0 package EGRET 3.0 enhancements (“Guide EGRET 3.0 enhancements”) well documentation “Introduction EGRET Confidence Intervals”“). two releases EGRET 3.0 EGRETci 2.0 tightly linked terms naming conventions sharing various objects . Brief reference made EGRETci functions documentation EGRET 3.0 enhancements. releases EGRET 3.0 add new flexibility WRTDS method. flexibility new version provides two kinds. One ability partition sample data two periods, one one , change happened watershed believe important, sudden, lasting impact water quality. ability relax assumption stationarity streamflow flow normalization process. shorthand refer first enhancements “wall”, second “Generalized Flow Normalization.” discussed detail “Guide EGRET 3.0 enhancements” repeated . document discusses motivations general concepts behind enhancements, move instructions implementation. assumed reader already good working knowledge WRTDS, EGRET EGRETci. Hirsch, Moyer Archfield, 2010, Hirsch DeCicco, 2015, Hirsch, Archfield DeCicco, 2015 Introduction EGRET package, Introduction EGRET Confidence Intervals. EGRETci 2.0 designed produce exactly outputs EGRETci 1.0 version using set commands used one notable exception. Previous versions EGRETci require “startSeed” argument running confidence intervals parallel. reason change assure can now reproduce bootstrapping calculations. important adjust parallel code include argument follows (specifically “startSeed = n” argument):","code":"nCores <- detectCores() - coreOut cl <- makeCluster(nCores) registerDoParallel(cl) repAnnual <- foreach(n = 1:nBoot,.packages=c('EGRETci')) %dopar% {    annualResults <- bootAnnual(eList,                                 blockLength,                                startSeed = n)   } stopCluster(cl)"},{"path":"http://usgs-r.github.io/EGRETci/articles/Enhancements.html","id":"problem-set-up","dir":"Articles","previous_headings":"","what":"Problem set up","title":"Guide to EGRETci 2.0 enhancements","text":"three distinct types problem set-ups possible new formulation distinct workflow outputs. known Pairs, Series, Groups. terms mean ? Pairs comparison two years study period, Series describe entire study period produce graphs change function time, Groups comparison two groups contiguous years. appropriate use three set-ups described detail “Guide EGRET 3.0 enhancements.”","code":""},{"path":"http://usgs-r.github.io/EGRETci/articles/Enhancements.html","id":"runpairsboot-the-bootstrap-uncertainty-analysis-for-runpairs-results","dir":"Articles","previous_headings":"","what":"runPairsBoot: The bootstrap uncertainty analysis for runPairs results","title":"Guide to EGRETci 2.0 enhancements","text":"function uncertainty analysis determining change pair years called runPairsBoot. similar wBT function runs WRTDS Bootstrap Test EGRETci 1.0. differs wBT runs specific number bootstrap replicates, unlike wBT approach stop running replicates based status test statistics along way. call runPairsBoot simple, gets virtually information analysis set information attributes pairResults. arguments required eList pairResults three arguments specifically related bootstrap process. described : nBoot number bootstrap replicates run. default value 100. value 100 give rough approximation correct likelihood trend direction. example, bootstrap results upwards trends 98 100 replicates, say 95% confidence true likelihood trend upwards 0.945 0.998 (rather strong evidence upwards trend). purposes published study going nBoot = 500 may appropriate. example 490 upwards trends 500 replicates say 95% confidence likelihood true trend upwards 0.966 0.991. see even worthwhile large number replicates one use small number replicates, say nBoot = 10 fairly even mix increases decreases can dispense high number replicates simply conclude likely . cases bootstrap replicates results converge generate error message results replicate. deal , function designed run replicates nBoot quit reaches nBoot startSeed seed random number generator, used create random bootstrap replicates data. default value integer work. Knowing startSeed value vital reproducing results. different value startSeed used later run produce slightly different results, nBoot 200 differences trivially small. blockLength block length block bootstrap resampling (see Hirsch, Archfield DeCicco, 2015 explanation). argument default 200 shouldn’t need specified. run trivially small example runPairsBoot based problem set second example runPairs EGRET 3.0 enhancements User Guide. output pretty self-explanatory latter part identical summary information provided wBT. object returned runPairsBoot virtually eBoot object returned wBT. contains data frame called bootOut contains results test shown console. One new feature bootOut$nBootGood. small chance bootstrap results contain small number iterations fail complete may end number valid replicates less nBoot. number usable replicates nBootGood. parts returned object returned wBT. One outputs can use describe results test histogram percentage changes. can done plotHistogramTrend function just EGRETci 1.0.3 software. difference call function don’t use caseSetUp runPairs argument set caseSetUp = NA. call function runPairsBoot result look like : two arguments required eList, eBoot represents output runPairsBoot. calls plotHistogramTrend first flux, concentration. [substituted set runPairsBoot outputs nBoot = 100 rather using one shown .] calls plotHistogramTrend first flux, concentration.   , results clearly show us flux clearly increased probably magnitude hundred percent concentration clearly increased probably amount 100 % 200 %.","code":"library(EGRET) library(EGRETci) eList <- Choptank_eList pairResults2 <- runPairs(eList, year1 = 1985, year2 = 2010,                           windowSide = 7, flowBreak = TRUE,                           Q1EndDate = \"1995-05-31\", wall = TRUE,                          sample1EndDate = \"1995-05-31\",                           QStartDate = \"1979-10-01\",                           QEndDate = \"2010-09-30\",                           paStart = 4, paLong = 5) bootPairOut2 <- runPairsBoot(eList,                               pairResults2,                               nBoot = 10) iBoot, xConc and xFlux 1 0.4048814 0.03866322  iBoot, xConc and xFlux 2 0.4186308 0.04813132  iBoot, xConc and xFlux 3 0.4114679 0.04757094  iBoot, xConc and xFlux 4 0.4314246 0.04415677  iBoot, xConc and xFlux 5 0.3456514 0.03323089  iBoot, xConc and xFlux 6 0.4639338 0.04792485  iBoot, xConc and xFlux 7 0.3480087 0.03212271  iBoot, xConc and xFlux 8 0.3694464 0.03815445  iBoot, xConc and xFlux 9 0.3502027 0.04509857  iBoot, xConc and xFlux 10 0.4180412 0.04559656    Choptank River     Inorganic nitrogen (nitrate and nitrite)    Season Consisting of Apr May Jun Jul Aug     Change estimates are for  2010  minus  1985  Sample data set was partitioned with a wall at  1995-05-31     Should we reject Ho that Flow Normalized Concentration Trend = 0 ? Reject Ho  best estimate of change in concentration is   0.412 mg/L   Lower and Upper 90% CIs    0.346    0.464  also 95% CIs    0.346    0.464   and 50% CIs    0.350    0.422  approximate two-sided p-value for Conc      0.18 * Note p-value should be considered to be < stated value  Likelihood that Flow Normalized Concentration is trending up = 0.955  is trending down = 0.0455  Should we reject Ho that Flow Normalized Flux Trend = 0 ? Reject Ho  best estimate of change in flux is   0.0456 10^6 kg/year   Lower and Upper 90% CIs   0.0321   0.0481  also 95% CIs   0.0321   0.0481   and 50% CIs   0.0369   0.0477  approximate two-sided p-value for Flux      0.18 * Note p-value should be considered to be < stated value  Likelihood that Flow Normalized Flux is trending up = 0.955  is trending down = 0.0455   Upward trend in concentration is highly likely   Upward trend in flux is highly likely  Downward trend in concentration is highly unlikely   Downward trend in flux is highly unlikely plotHistogramTrend(eList, eBoot, caseSetUp = NA,                     flux = TRUE, xMin = NA, xMax = NA,                     xStep = NA, printTitle = TRUE,                     cex.main = 1.1, cex.axis = 1.1,                     cex.lab = 1.1, col.fill = \"grey\", ...) bootPairOut2 <- runPairsBoot(eList, pairResults2, nBoot = 100) plotHistogramTrend(eList,bootPairOut2, caseSetUp = NA) plotHistogramTrend(eList,bootPairOut2, caseSetUp = NA, flux = FALSE)"},{"path":"http://usgs-r.github.io/EGRETci/articles/Enhancements.html","id":"the-bootstrap-uncertainty-analysis-for-runseries","dir":"Articles","previous_headings":"","what":"The bootstrap uncertainty analysis for runSeries","title":"Guide to EGRETci 2.0 enhancements","text":"purpose Series analysis create time series flow-normalized concentrations flow-normalized flux values. function runSeries EGRET package. case runSeries can uncertainty analysis provides us confidence intervals around flow normalized time series estimated running runSeries function. case actually use functions used EGRETci 1.0.3, modified accommodate flexible features runSeries (run exactly just working results modelEstimation). called: eList passed function version eList already run runSeries. , example run shown eList argument eListOut. version contains estimated values well arguments used computation (related wall flowBreak etc.). need specify startSeed, default fine (unless one wants explore results might change another run function). avoid seeing progress indicators screen one can set verbose = FALSE, may desirable just see job continuing run setting verbose = TRUE. can take considerable amount computer time. ... call specifically relate bootstrap-related parameters user might wish set. can left call, program interactively request information, can set directly call. set run job specifying without interactive part (done batch implementation). run bootstrap analysis . use output last run runSeries example EGRET enhancement vignette. nBoot number bootstrap replicates run. result suitable publication probably nBoot least 100 preferably 200. blockLength typically set 200. widthCI width confidence interval. widthCI = 90 means confidence intervals drawn 5th 95th percentiles. can visualize results using plotConcHistBoot plotFluxHistBoot functions (part EGRETci 1.0.3 code). Running results runSeries requires use eList produced runSeries function. , following results saw runSeries obtain confidence interval plots follows. (Note several arguments functions used plotConcHist plotFluxHist).  Looking output, particularly plotFluxHistBoot, suggests windowSide argument probably short. plot simply jagged. better choice probably set windowSide = 11. included example show problem windowSide small. general conclusions overall increase 30 year record remain width confidence intervals wouldn’t change much better windowSide argument used.","code":"CIAnnualResults <- ciCalculations(eList,                                    startSeed = 494817,                                    verbose = TRUE, ...) eList <- Choptank_eList eListOut <- runSeries(eList, windowSide = 7, verbose = FALSE) CIAnnualResults <- ciCalculations(eListOut,                                    verbose = FALSE,                                    nBoot = 100,                                   blockLength = 200,                                    widthCI = 90) CIAnnualResults <- ciCalculations(eListOut,                                    verbose = FALSE,                                    nBoot = 100,                                   blockLength = 200,                                    widthCI = 90) plotConcHistBoot(eListOut, CIAnnualResults) plotFluxHistBoot(eListOut, CIAnnualResults)"},{"path":"http://usgs-r.github.io/EGRETci/articles/Enhancements.html","id":"rungroupsboot-the-bootstrap-uncertainty-analysis-for-rungroups-results","dir":"Articles","previous_headings":"","what":"runGroupsBoot: The bootstrap uncertainty analysis for runGroups results","title":"Guide to EGRETci 2.0 enhancements","text":"function uncertainty analysis determining change two groups years called runGroupsBoot. process virtually identical used runPairsBoot, much detail left discussion. call runGroupsBoot simple, gets virtually information analysis set information attributes groupResults. arguments required eList groupResults three arguments specifically related bootstrap process: nBoot number bootstrap replicates run. default value 100. cases bootstrap replicates results converge generate error message results replicate. deal function designed run replicates nBoot quit reaches nBoot startSeed seed random number generator, used create random bootstrap resamples data. default value integer work. blockLength block length block bootstrap resampling. argument default 200 shouldn’t need specified. run runGroupsBoot based problem set-example runGroups EGRET 3.0 Enhancements User Guide. output pretty self-explanatory virtually generated runPairsBoot. object returned runGroupsBoot virtually eBoot object returned wBT. object returned, called bootGroupsOut contains results test shown console. cam visualize results test histogram percentage changes. can done plotHistogramTrend function. call function runGroupsBoot result look like : two arguments required eList, eBoot represents output runGroupsBoot. calls plotHistogramTrend first flux, concentration. xMin, xMax, xStep arguments shown selected based first viewing results using default values searching set values three arguments provided good representation distribution.   results clearly show us flux concentration indicate somewhat likely increase rather decrease two groups years. best estimate increase little less + 10%. flux concentration trend fairly likely range -20% +30%.","code":"eList <- Choptank_eList groupResults <- runGroups(eList,                            group1firstYear = 1995, group1lastYear = 2004,                            group2firstYear = 2005, group2lastYear = 2010,                           windowSide = 7, wall = TRUE,                            sample1EndDate = \"2004-10-30\",                            paStart = 4, paLong = 2, verbose = FALSE) bootGroupsOut <- runGroupsBoot(eList, groupResults, nBoot = 100) iBoot, xConc and xFlux 1 0.1112342 0.00210587  iBoot, xConc and xFlux 2 0.2313755 0.01785959  iBoot, xConc and xFlux 3 0.1940411 0.01241572  iBoot, xConc and xFlux 4 0.1362666 0.01586453  ...  iBoot, xConc and xFlux 98 0.2323236 0.02383054  iBoot, xConc and xFlux 99 0.1258737 0.01037859  iBoot, xConc and xFlux 100 0.2255112 0.01616338     Choptank River     Inorganic nitrogen (nitrate and nitrite)    Season Consisting of Apr May    Change estimates for  average of 2005  through 2010  minus average of 1995  through 2004    Sample data set was partitioned with a wall at  2004-10-30     Should we reject Ho that Flow Normalized Concentration Trend = 0 ? Reject Ho  best estimate of change in concentration is   0.153 mg/L   Lower and Upper 90% CIs  0.03306  0.25923  also 95% CIs  0.00971  0.29603   and 50% CIs  0.09818  0.19353  approximate two-sided p-value for Conc     0.033  Likelihood that Flow Normalized Concentration is trending up = 0.985  is trending down = 0.0149  Should we reject Ho that Flow Normalized Flux Trend = 0 ? Do Not Reject Ho  best estimate of change in flux is  0.00931 10^6 kg/year   Lower and Upper 90% CIs -0.014505  0.026523  also 95% CIs -0.017796  0.033343   and 50% CIs  0.000622  0.016089  approximate two-sided p-value for Flux      0.47  Likelihood that Flow Normalized Flux is trending up = 0.767  is trending down = 0.233   Upward trend in concentration is highly likely   Upward trend in flux is likely  Downward trend in concentration is highly unlikely   Downward trend in flux is unlikely plotHistogramTrend(eList, eBoot, flux = TRUE,                           xMin = NA, xMax = NA, xStep = NA,                           printTitle = TRUE, cex.main = 1.1,                           cex.axis = 1.1, cex.lab = 1.1,                           col.fill = \"grey\") plotHistogramTrend(eList, bootGroupsOut,                     xMin = -30, xMax = 40, xStep = 10) plotHistogramTrend(eList, bootGroupsOut,                     flux=FALSE, xMin = -10,                    xMax = 50, xStep = 5)"},{"path":"http://usgs-r.github.io/EGRETci/articles/prediction.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Graphics for Prediction Intervals","text":"script provides set examples use WRTDS_Kalman outputs characterize uncertainty estimated record concentration flux (mostly deal flux ). workflow takes place point consists following steps. eList created WRTDS model estimated. Note irrelevant whether use Stationary Flow Normalization Generalized Flow Normalization. simplest thing estimate model modelEstimation. wall feature desired, step done runSeries. WRTDS_Kalman estimates need computed. done command: want create large number bootstrap replicates daily record concentration flux. command like : nBoot number bootstrap replicates run, one used estimate WRTDS model (can think estimation error) nKalman number individual traces concentration (flux) generated WRTDS models (can think stochastic variability process) rho autoregressive lag one day correlation coefficient assume (default 0.9) Now ready look uncertainty time scale Annual, Monthly, Daily. also look uncertainty cumulative flux record.","code":"library(EGRET) library(EGRETci)  eListK <- readRDS(\"Pinehurst_eListK.rds\")  eListK <- WRTDSKalman(eList) dailyBootOut <- genDailyBoot(eListK,                               nBoot = 25, nKalman = 20, rho = 0.9)"},{"path":"http://usgs-r.github.io/EGRETci/articles/prediction.html","id":"setting-up-the-data-and-running-the-annual-prediction-intervals","dir":"Articles","previous_headings":"","what":"Setting up the data and running the Annual Prediction Intervals","title":"Graphics for Prediction Intervals","text":"start creating large matrix called dailyBootOut. row matrix day record. must perfect match rows eList$Daily rows dailyBootOut. various calculations need get date information discharge information eList$Daily. column matrix individual replicate time series flux values. case running , nBoot = 25 nKalman = 20, number columns 25*20 = 500. case looking annual values process aggregate daily records annual records look distribution flux values year record. distribution year, provide us prediction interval, year. Throughout example everything based 90% prediction intervals. means estimating 0.05 probability true value lies interval, 0.05 probability true value lies interval, 0.9 probability true value lies within interval. wanted go higher prediction interval, say 95% prediction interval 98% prediction interval need greatly increase number replicates run, greatly increase computational storage burden. Notice need use eListK data frame find WRTDSKalman estimate time step. give us expected value flux. , place expected value, use median 500 replicates.  black dot best estimate flux year. red bar 90% prediction interval. note units throughout discussion. always presenting flux average rate kg/day. presented total flux year, case quantities multiplied 365.25 label y-axis changed “Annual Flux, kg”. multiply flux value (365.25/1000) change label “Annual Flux, metric tons”. Note prediction intervals narrow low flux years wide high flux years, relationship mean value width interval isn’t simple relationship lot depends well samples collected around year characterize whole relationship concentration time, discharge, season. , wanted , show result log scale.","code":"# this next line is what you would run if you needed to create dailyBootOut # dailyBootOut <- genDailyBoot(eList, nBoot = 25, nKalman = 20, rho = 0.9) annPct <- makeAnnualPI(dailyBootOut, eListK)  yMax <- 1.1 * max(annPct$flux$p95) nYears <- length(annPct$flux$p95) AnnualResults <- setupYears(eListK$Daily) kFlux <- data.frame(AnnualResults$DecYear,AnnualResults$GenFlux) title <- \"South Fork Coeur d'Alene River near Pinehurst, ID\\nAnnual Total Phosphorus Flux\\nWith 90% Prediction Intervals\" plot(kFlux[,1], kFlux[,2],ylim = c(0,yMax), yaxs = \"i\",main = title, xlab = \"Year\",       ylab = \"Annual Mean Flux, in kg per day\", pch = 19, cex = 0.7, las = 1, tck = 0.02) axis(3, labels = FALSE, tck = 0.02) axis(4, labels = FALSE, tck = 0.02) for(i in 1: nYears){   lines(rep(annPct$flux$DecYear[i], 2), c(annPct$flux$p5[i], annPct$flux$p95[i]),          col = \"red\", lwd = 2) } yMax <- 1.15 * max(annPct$flux$p95) yMin <- 0.85 * min(annPct$flux$p5) ylim <- c(yMin, yMax) nYears <- length(annPct$flux$p95) AnnualResults <- setupYears(eListK$Daily) kFlux <- data.frame(AnnualResults$DecYear,AnnualResults$GenFlux) title <- \"South Fork Coeur d'Alene River near Pinehurst, ID\\nAnnual Total Phosphorus Flux\\nWith 90% Prediction Intervals\" plot(kFlux[,1], kFlux[,2],ylim = ylim, yaxs = \"i\",main = title, xlab = \"Year\",       ylab = \"Annual Mean Flux, in kg per day\", pch = 19, cex = 0.7, las = 1, tck = 0.02, log = \"y\") axis(3, labels = FALSE, tck = 0.02) axis(4, labels = FALSE, tck = 0.02) for(i in 1: nYears){   lines(rep(annPct$flux$DecYear[i], 2), c(annPct$flux$p5[i], annPct$flux$p95[i]),          col = \"red\", lwd = 2) }"},{"path":"http://usgs-r.github.io/EGRETci/articles/prediction.html","id":"monthly-prediction-intervals","dir":"Articles","previous_headings":"","what":"Monthly prediction intervals","title":"Graphics for Prediction Intervals","text":"process similar except show output log scale graphic (large differences largest flux months smallest flux months). , flux rates (kg/day), output changed total mass month, multiplying values number days month.","code":"MonthlyResults <- calculateMonthlyResults(eListK) kFluxMonth <- data.frame(MonthlyResults$DecYear,MonthlyResults$GenFlux) nMonths <- length(MonthlyResults$DecYear) monthPct <- makeMonthPI(dailyBootOut, eListK) yMaxMonth <- 1.15 * max(monthPct$flux$p95) yMinMonth <- 0.85 * min(monthPct$flux$p5) title <- \"South Fork Coeur d'Alene River near Pinehurst, ID\\nMonthly Total Phosphorus Flux\\nWith 90% Prediction Intervals\" plot(kFluxMonth[,1], kFluxMonth[,2],ylim = c(yMinMonth,yMaxMonth), yaxs = \"i\",main = title, xlab = \"Year\", las = 1, tck = 0.02,      ylab = \"Monthly Mean Flux, in kg per day\", pch = 19, cex = 0.5, log = \"y\") axis(3, labels = FALSE, tck = 0.02) axis(4, labels = FALSE, tck = 0.02) for(i in 1: nMonths){   lines(rep(MonthlyResults$DecYear[i], 2), c(monthPct$flux$p5[i], monthPct$flux$p95[i]),          col = \"red\", lwd = 0.8) }"},{"path":"http://usgs-r.github.io/EGRETci/articles/prediction.html","id":"daily-prediction-intervals","dir":"Articles","previous_headings":"","what":"Daily prediction intervals","title":"Graphics for Prediction Intervals","text":"process similar, except don’t aggregate months year. number days large showing single graph prediction intervals day just crowded show. showing just time slice less one year. choice time periods show just manipulated changing xlim argument plot command.  feature plot worth noting prediction intervals narrow certain points. dates one samples collected. example, day just 3 days end period shown prediction interval width zero. sampled day 1996-08-13. month 1996-07-15 (appears around 1996.54) see prediction interval narrow hasn’t shrunk zero width sample value reported <0.01 mg/L, even though sample day still uncertainty. course, days prediction intervals zero width demonstrate oversimplification method using . sample value concentration multiplied discharge day perfect estimate flux. , doubt, within day variation concentration also random error sample collection sample analysis laboratory. One make analysis complex add features view oversimplification reasonable way proceed. help one see estimates likely fairly poor versus likely fairly good. can look another time slice length recent time. Note scales plot scale previous plot.","code":"kFluxDay <- data.frame(eListK$Daily$DecYear, eListK$Daily$GenFlux) nDays <- length(eListK$Daily$DecYear) dayPct <- makeDailyPI(dailyBootOut, eListK) yMaxDay <- 1.15 * max(dayPct$flux$p95) yMinDay <- 0.85 * min(dayPct$flux$p5) xlim <- c(1996, 1996.6) title <- \"South Fork Coeur d'Alene River near Pinehurst, ID\\nDaily Total Phosphorus Flux\\nWith 90% Prediction Intervals\" plot(kFluxDay[,1], kFluxDay[,2],ylim = c(yMinDay,yMaxDay), xlim = xlim, yaxs = \"i\",main = title, xlab = \"Year\",      ylab = \"Daily Flux, in kg per day\", pch = 19, cex = 0.5, log = \"y\", las = 1, tck = 0.02) axis(3, labels = FALSE, tck = 0.02) axis(4, labels = FALSE, tck = 0.02) for(i in 1: nDays){   lines(rep(kFluxDay[i,1], 2), c(dayPct$flux$p5[i], dayPct$flux$p95[i]),          col = \"red\", lwd = 1) } xlim <- c(2017, 2017.6) title <- \"South Fork Coeur d'Alene River near Pinehurst, ID\\nDaily Total Phosphorus Flux\\nWith 90% Prediction Intervals\" plot(kFluxDay[,1], kFluxDay[,2],ylim = c(yMinDay,yMaxDay), xlim = xlim, yaxs = \"i\",main = title, xlab = \"Year\",      ylab = \"Daily Flux, in kg per day\", pch = 19, cex = 0.5, log = \"y\", las = 1, tck = 0.02) axis(3, labels = FALSE, tck = 0.02) axis(4, labels = FALSE, tck = 0.02) for(i in 1: nDays){   lines(rep(kFluxDay[i,1], 2), c(dayPct$flux$p5[i], dayPct$flux$p95[i]),          col = \"red\", lwd = 1) }"},{"path":"http://usgs-r.github.io/EGRETci/articles/prediction.html","id":"looking-at-the-daily-record-from-a-concentration-perspective","dir":"Articles","previous_headings":"","what":"Looking at the daily record from a concentration perspective","title":"Graphics for Prediction Intervals","text":"point just looking flux, generally WRTDSKalman likely useful, can insights can provide frequencies concentration might exceed kind water quality standard (either aquatic life standard, recreational water standard, drinking water source standard). ’ll use data set just pretend standard want use benchmark, 0.1 mg/L. simplest terms want get idea long term changes frequently concentration might exceeding benchmark. graphics shown thought indicative changing conditions viewed rigorous quantitative result. believe ways go analyses ’s beyond scope discussions. example case WRTDS used try quantify trends frequency exceedances see (Corsi et al., 2015)[https://doi.org/10.1016/j.scitotenv.2014.12.012]. method used paper yet turned portable R code subjected testing, probably able graduate student.  graph lets pose question. Let’s define something ’ll call “potentially problematic day” (PPD) day think probability day exceeded standard 0.1 mg/L greater 0.05. Visually, PPD day red vertical line sticks 0.1 mg/L standard. think can say frequency PPDs decreasing time. Good news! wording strict probabalistic meaning imperfect point, think concept worth developing.","code":"xlim <- c(2000,2020) kConcDay <- data.frame(eListK$Daily$DecYear, eListK$Daily$GenConc) yMaxDay <- 1.15 * max(dayPct$conc$p95) yMinDay <- 0.85 * min(dayPct$conc$p5) title <- \"South Fork Coeur d'Alene River near Pinehurst, ID\\nDaily Total Phosphorus Concentration\\nWith 90% Prediction Intervals (pretend there was a standard of 0.1 mg/L)\" plot(kConcDay[,1], kConcDay[,2],ylim = c(yMinDay,yMaxDay), xlim = xlim, yaxs = \"i\",main = title, xlab = \"Year\",      ylab = \"Concentration, in mg/L\", pch = 19, cex = 0.2, log = \"y\", xaxs = \"i\", las = 1, cex.main = 0.7, tck = 0.02) axis(3, labels = FALSE, tck = 0.02) axis(4, labels = FALSE, tck = 0.02) for(i in 1: nDays){   lines(rep(kConcDay[i,1], 2), c(dayPct$conc$p5[i], dayPct$conc$p95[i]),          col = \"red\", lwd = 0.05) } abline(h = 0.1, col = \"green\", lwd = 2)"},{"path":"http://usgs-r.github.io/EGRETci/articles/prediction.html","id":"cumulative-loading","dir":"Articles","previous_headings":"","what":"Cumulative loading","title":"Graphics for Prediction Intervals","text":"dealing subject inputs /outputs material () reservoir, lake, even river reach (including riparian zone) useful think cumulative fluxes. , want add fluxes day day see cumulative amounts grow time. often see clear indication constituents like TP mostly move system times high discharge, see cumulative curve gently sloping upwards, punctuated series vertical steps representing brief periods high discharge. show first, best estimate cumulative flux derive WRTDSKalman estimate (consideration uncertainty). can add number equally likely traces cumulative flux, using many replicates stored dailyBootOut. 500 equally likely traces dailyBootOut (trace column matrix) look like just mass ink screen, make understandable plot every tenth trace (trace 1, trace 11, trace 21, …trace 491).   see either long periods fairly gradual increase cumulative flux, punctuated abrupt increases high flow events happened 1996. look one 50 iterations can see traces stay pretty close together roughly 30 years total range cumulative flux runs 550 metric tons 640 metric tons phosphorus passing monitoring site. next phase analysis (won’t covered document) involve exact kind analysis next monitoring site downstream, creating 500 possible iterations record. , wanted examine record gains losses TP reach two sites, randomly pair iterations upstream site iterations downstream site, take difference two cumulative records. look cumulative record differences see distribution gains /losses reach. , ’s another day.","code":"nIter <- length(dailyBootOut[1,]) nDays <- length(dailyBootOut[,1]) dailyBootSum <- dailyBootOut title <- \"South Fork Coeur d'Alene River near Pinehurst, ID\\nCumulative Daily Total Phosphorus Flux\\nShowing the best estimate from WRTDSKalman\" cumulative <- cumsum(eListK$Daily$GenFlux)  nLines <- nIter / 10 for(j in 1: nIter){   dailyBootSum[,j] <- cumsum(dailyBootOut[,j]) } yMax <- 1.1 * max(dailyBootSum[nDays,])  # first we will look at the WRTDSKalman estimate alone  # we divide all the values by 1000 to get to metric tons plot(eListK$Daily$DecYear, cumulative/1000,       ylim = c(0, yMax/1000), yaxs = \"i\",       main = title,      ylab = \"Cumulative flux, in metric tons\",       xlab = \"Year\",type = \"l\", lwd = 1.5, las = 1, tck = 0.02, col = \"red\") axis(3, labels = FALSE, tck = 0.02) axis(4, labels = FALSE, tck = 0.02) # now showing the random iterations  title <- \"South Fork Coeur d'Alene River near Pinehurst, ID\\nCumulative Daily Total Phosphorus Flux\\nonly showing one tenth of the iterations\" plot(eListK$Daily$DecYear, dailyBootSum[,1]/1000,       ylim = c(0, yMax/1000), yaxs = \"i\", main = title,      ylab = \"Cumulative flux, in metric tons\",      xlab = \"Year\",type = \"l\", lwd = 0.5, las = 1, tck = 0.02) axis(3, labels = FALSE, tck = 0.02) axis(4, labels = FALSE, tck = 0.02) for(k in 2: nLines) {   j <- k * 10     points(eListK$Daily$DecYear, dailyBootSum[,j]/1000,             type = \"l\", lwd = 0.5)   }"},{"path":"http://usgs-r.github.io/EGRETci/articles/prediction.html","id":"prediction-intervals-on-the-cumulative-flux","dir":"Articles","previous_headings":"","what":"Prediction intervals on the cumulative flux","title":"Graphics for Prediction Intervals","text":"going look prediction intervals cumulative flux curve every day record. actually going create three lines. One black represents median distribution day. means model tells us 50% chance true cumulative flux day falls black line (50% chance falls black line). red 5% 95% limits. means 5% chance true cumulative flux lies lower red line 5% chance true cumulative flux lies upper red line, course, 90% chance true cumulative flux lies two red lines given day. Note making inferences true value given day. graph tell us anything probability true trace fall entirely inside red lines. probability true cumulative flux (don’t actually know) sometime fall outside two red curves almost certainly good deal larger 10%, way knowing might .","code":"nIter <- length(dailyBootOut[1,]) nDays <- length(dailyBootOut[,1])  dailyLow <- rep(NA,nDays) dailyMid <- rep(NA,nDays) dailyHigh <- rep(NA,nDays) title <- \"South Fork Coeur d'Alene River near Pinehurst, ID\\nCumulative Daily Total Phosphorus Flux\\n90% Prediction Intervals\"  for(i in 1: nDays) {   v <- quantile(dailyBootSum[i,], probs = c(0.05, 0.5, 0.95), type = 6)   dailyLow[i] <- v[1]   dailyMid[i] <- v[2]   dailyHigh[i] <- v[3] }  plot(eListK$Daily$DecYear, dailyMid/1000, ylim = c(0, yMax/1000), yaxs = \"i\", main = title,      ylab = \"Cumulative flux in metric tons\", xlab = \"Year\", type = \"l\", lwd = 1, col = \"black\",      las = 1, tck = 0.02) axis(3, labels = FALSE, tck = 0.02) axis(4, labels = FALSE, tck = 0.02) points(eListK$Daily$DecYear, dailyLow/1000, type = \"l\", lwd = 1, col = \"red\") points(eListK$Daily$DecYear, dailyHigh/1000, type = \"l\", lwd = 1, col = \"red\")"},{"path":"http://usgs-r.github.io/EGRETci/articles/prediction.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Graphics for Prediction Intervals","text":"figures give ideas one might utilize results can come genBootDaily function (WRTDSKalman bootstrapping process). course examples used produce tabular output rather graphical. process pretty clear following code. None kinds analyses graphics currently publications. Major testing accuracy results currently underway showing promising results. Verification kind results easy, isn’t just matter saying close get truth, rather question , many applications methods frequently truth really outside 90% prediction interval (host similar questions, evaluated many time scales many data sets). said , think methods ready people put use quantifying uncertainty concentration flux estimates.","code":""},{"path":"http://usgs-r.github.io/EGRETci/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Laura DeCicco. Author, maintainer. Robert Hirsch. Author. Jennifer Murphy. Contributor.","code":""},{"path":"http://usgs-r.github.io/EGRETci/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hirsch, R.M., Archfield, S.., De Cicco, L.., \"bootstrap method estimating uncertainty water quality trends\", Environmental Modelling & Software, Vol 73, Nov 2015, p 148-166. doi: 10.1016/j.envsoft.2015.07.017","code":"@Article{,   author = {Robert M. Hirsch and Stacey A. Archfield and Laura A. {De Cicco}},   title = {A bootstrap method for estimating uncertainty of water quality trends},   journal = {Journal of Environmental Modelling and Software},   year = {2015}, }"},{"path":"http://usgs-r.github.io/EGRETci/index.html","id":"egretci-","dir":"","previous_headings":"","what":"Exploration and Graphics for RivEr Trends Confidence Intervals","title":"Exploration and Graphics for RivEr Trends Confidence Intervals","text":"package EGRETci implements set approaches analysis uncertainty associated WRTDS trend analysis implemented EGRET package. See: http://authors.elsevier.com/sd/article/S1364815215300220 details. EGRETci package designed carry three specific types tasks. Evaluate water quality trend specific span years produce variety tabular results. done short workflow involving functions: trendSetUp wBT. results come three forms: 1) console output, shows bootstrap replicate process underway results finished, 2) text file shows results bootstrap analysis (subset included console output), 3) set outputs named list called eBoot. contents eBoot described . Plot histograms values trend magnitudes, expressed percent change specified period, flow-normalized concentration flow-normalized flux. done function plotHistogramTrend. depends outputs contained eBoot. Note number custom outputs similar histograms can developed contents eBoot (example, likelihood flow normalized flux decreased 2000 kg/year trend period). analyses require small amount script writing user. Plot confidence bands around computed trends flow-normalized concentration flow-normalized flux. done using function called ciCalculations , using output function running two functions produce confidence band graphics concentration flux respectively (plotConcHistBoot, plotFluxHistBoot).","code":""},{"path":"http://usgs-r.github.io/EGRETci/index.html","id":"how-to-cite-egretci","dir":"","previous_headings":"","what":"How to cite EGRETci:","title":"Exploration and Graphics for RivEr Trends Confidence Intervals","text":"","code":"citation(package = \"EGRETci\") #>  #> To cite EGRETci in publications, please use: #>  #>   Hirsch, R.M., Archfield, S.A., De Cicco, L.A., \"A bootstrap method #>   for estimating uncertainty of water quality trends\", Environmental #>   Modelling & Software, Vol 73, Nov 2015, p 148-166. doi: #>   10.1016/j.envsoft.2015.07.017 #>  #> A BibTeX entry for LaTeX users is #>  #>   @Article{, #>     author = {Robert M. Hirsch and Stacey A. Archfield and Laura A. {De Cicco}}, #>     title = {A bootstrap method for estimating uncertainty of water quality trends}, #>     journal = {Journal of Environmental Modelling and Software}, #>     year = {2015}, #>   }"},{"path":"http://usgs-r.github.io/EGRETci/index.html","id":"reporting-bugs","dir":"","previous_headings":"How to cite EGRETci:","what":"Reporting bugs","title":"Exploration and Graphics for RivEr Trends Confidence Intervals","text":"Please consider reporting bugs asking questions Issues page: https://github.com/USGS-R/EGRETci/issues","code":""},{"path":"http://usgs-r.github.io/EGRETci/index.html","id":"code-of-conduct","dir":"","previous_headings":"How to cite EGRETci:","what":"Code of Conduct","title":"Exploration and Graphics for RivEr Trends Confidence Intervals","text":"want encourage warm, welcoming, safe environment contributing project. See code conduct information.","code":""},{"path":"http://usgs-r.github.io/EGRETci/index.html","id":"model-archive","dir":"","previous_headings":"","what":"Model Archive","title":"Exploration and Graphics for RivEr Trends Confidence Intervals","text":"using WRTDS model (corresponding confidence intervals), important able reproduce results future. following version R package dependencies used recently pass embedded tests within package. guarantee reproducible results using future versions R updated versions package dependencies; however, make diligent efforts test update future modeling environments.","code":"sessioninfo::session_info() #> ─ Session info ─────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.2.2 (2022-10-31 ucrt) #>  os       Windows 10 x64 (build 19044) #>  system   x86_64, mingw32 #>  ui       RTerm #>  language (EN) #>  collate  English_United States.utf8 #>  ctype    English_United States.utf8 #>  tz       America/Chicago #>  date     2022-12-09 #>  pandoc   2.19.2 @ C:/Program Files/RStudio/bin/quarto/bin/tools/ (via rmarkdown) #>  #> ─ Packages ─────────────────────────────────────────────────────────────────── #>  package     * version date (UTC) lib source #>  cli           3.4.1   2022-09-23 [1] CRAN (R 4.2.1) #>  digest        0.6.30  2022-10-18 [1] CRAN (R 4.2.2) #>  evaluate      0.18    2022-11-07 [1] CRAN (R 4.2.2) #>  fastmap       1.1.0   2021-01-25 [1] CRAN (R 4.2.1) #>  glue          1.6.2   2022-02-24 [1] CRAN (R 4.1.3) #>  htmltools     0.5.4   2022-12-07 [1] CRAN (R 4.2.2) #>  knitr         1.41    2022-11-18 [1] CRAN (R 4.2.2) #>  lifecycle     1.0.3   2022-10-07 [1] CRAN (R 4.2.1) #>  magrittr      2.0.3   2022-03-30 [1] CRAN (R 4.1.3) #>  rlang         1.0.6   2022-09-24 [1] CRAN (R 4.2.1) #>  rmarkdown     2.18    2022-11-09 [1] CRAN (R 4.2.2) #>  rstudioapi    0.14    2022-08-22 [1] CRAN (R 4.2.1) #>  sessioninfo   1.2.2   2021-12-06 [1] CRAN (R 4.2.1) #>  stringi       1.7.8   2022-07-11 [1] CRAN (R 4.2.1) #>  stringr       1.5.0   2022-12-02 [1] CRAN (R 4.2.2) #>  vctrs         0.5.1   2022-11-16 [1] CRAN (R 4.2.2) #>  xfun          0.35    2022-11-16 [1] CRAN (R 4.2.2) #>  yaml          2.3.6   2022-10-18 [1] CRAN (R 4.2.1) #>  #>  [1] C:/Users/ldecicco/Documents/R/win-library/4.2 #>  [2] C:/Program Files/R/R-4.2.2/library #>  #> ──────────────────────────────────────────────────────────────────────────────"},{"path":"http://usgs-r.github.io/EGRETci/index.html","id":"disclaimer","dir":"","previous_headings":"","what":"Disclaimer","title":"Exploration and Graphics for RivEr Trends Confidence Intervals","text":"software preliminary provisional subject revision. provided meet need timely best science. software received final approval U.S. Geological Survey (USGS). warranty, expressed implied, made USGS U.S. Government functionality software related material shall fact release constitute warranty. software provided condition neither USGS U.S. Government shall held liable damages resulting authorized unauthorized use software.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/EGRETci-package.html","id":null,"dir":"Reference","previous_headings":"","what":"EGRETci package for bootstrap hypothesis tests and confidence interval analysis for WRTDS (Weighted \nRegressions on Time, Discharge, and Season) statistical models. This \npackage is designed to be used in conjunction with the EGRET package, \nwhich estimates and describes WRTDS models. — EGRETci-package","title":"EGRETci package for bootstrap hypothesis tests and confidence interval analysis for WRTDS (Weighted \nRegressions on Time, Discharge, and Season) statistical models. This \npackage is designed to be used in conjunction with the EGRET package, \nwhich estimates and describes WRTDS models. — EGRETci-package","text":"Collection functions evaluate uncertainty results water quality analysis using  Weighted Regressions Time Discharge Season (WRTDS) method. package add- EGRET package performs WRTDS analysis.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/EGRETci-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"EGRETci package for bootstrap hypothesis tests and confidence interval analysis for WRTDS (Weighted \nRegressions on Time, Discharge, and Season) statistical models. This \npackage is designed to be used in conjunction with the EGRET package, \nwhich estimates and describes WRTDS models. — EGRETci-package","text":"Hirsch, R.M., De Cicco, L.., 2015, User guide Exploration Graphics RivEr Trends  (EGRET) dataRetrieval: R packages hydrologic data: U.S. Geological Survey Techniques Methods book 4,  chap. A10, 94 p., doi:10.3133/tm4A10 Hirsch, R.M., Archfield, S.., De Cicco, L.., 2015,  bootstrap method estimating uncertainty water quality trends.   Environmental Modelling & Software, 73, 148-166.  https://www.sciencedirect.com/science/article/pii/S1364815215300220","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/EGRETci-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"EGRETci package for bootstrap hypothesis tests and confidence interval analysis for WRTDS (Weighted \nRegressions on Time, Discharge, and Season) statistical models. This \npackage is designed to be used in conjunction with the EGRET package, \nwhich estimates and describes WRTDS models. — EGRETci-package","text":"Robert M. Hirsch rhirsch@usgs.gov, Laura De Cicco ldecicco@usgs.gov","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/blockSample.html","id":null,"dir":"Reference","previous_headings":"","what":"blockSample — blockSample","title":"blockSample — blockSample","text":"Get bootstrap replicate Sample data frame based user-specified blockLength.  bootstrap replicate made randomly selected blocks  data Sample data frame.  block includes samples standard period time (blockLength measured days). blocks created based random selection ( replacement) starting dates full Sample data frame.  bootstrap replicate   number observations original Sample,  observations included , included multiple times,  included .","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/blockSample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"blockSample — blockSample","text":"","code":"blockSample(localSample, blockLength, startSeed = NA)"},{"path":"http://usgs-r.github.io/EGRETci/reference/blockSample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"blockSample — blockSample","text":"localSample Sample data frame blockLength integer size subset, expressed days.  200 days found good choice. startSeed setSeed value. used make repeatable output. Default = NA.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/blockSample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"blockSample — blockSample","text":"newSample data frame format Sample data frame.  number rows Sample data frame.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/blockSample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"blockSample — blockSample","text":"","code":"library(EGRET) eList <- Choptank_eList Sample <- eList$Sample bsReturn <- blockSample(Sample, 200)"},{"path":"http://usgs-r.github.io/EGRETci/reference/bootAnnual.html","id":null,"dir":"Reference","previous_headings":"","what":"Single confidence interval bootstrap run — bootAnnual","title":"Single confidence interval bootstrap run — bootAnnual","text":"One bootstrap run used calculating confidence interval bands.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/bootAnnual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Single confidence interval bootstrap run — bootAnnual","text":"","code":"bootAnnual(eList, blockLength = 200, startSeed = 494817, verbose = FALSE,   jitterOn = FALSE, V = 0.2)"},{"path":"http://usgs-r.github.io/EGRETci/reference/bootAnnual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Single confidence interval bootstrap run — bootAnnual","text":"eList named list least Daily, Sample, INFO dataframes. Created EGRET package, running modelEstimation. blockLength integer default value 200. startSeed setSeed value. Defaults 494817. used make repeatable output. verbose logical specifying whether display progress message. jitterOn logical, TRUE, adds \"jitter\" data attempt avoid numerical problems.  Default = FALSE.  See Details . V numeric multiplier addition jitter data, default = 0.2.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/bootAnnual.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Single confidence interval bootstrap run — bootAnnual","text":"situations numerical problems encountered bootstrap process, resulting highly unreasonable spikes confidence intervals. use \"jitter\" can often prevent problems, used clearly needed. adds small amount random \"jitter\" explanatory variables WRTDS model.  V parameter sets scale variation log discharge values. standard deviation added jitter V * standard deviation Log Q. default V 0.2.  Larger values generally avoided, smaller values may sufficient.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/bootAnnual.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Single confidence interval bootstrap run — bootAnnual","text":"","code":"library(EGRET) eList <- Choptank_eList if (FALSE) { annualResults <- bootAnnual(eList) }"},{"path":"http://usgs-r.github.io/EGRETci/reference/ciBands.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Interval Band Calculations — ciBands","title":"Confidence Interval Band Calculations — ciBands","text":"Computes confidence intervals Flow-Normalized Concentration  Flow-Normalized Flux WRTDS model.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/ciBands.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Interval Band Calculations — ciBands","text":"","code":"ciBands(eList, repAnnualResults, probs = c(0.05, 0.95))"},{"path":"http://usgs-r.github.io/EGRETci/reference/ciBands.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Interval Band Calculations — ciBands","text":"eList named list least Daily, Sample,  INFO dataframes. Created EGRET package, running  modelEstimation. repAnnualResults named list returned bootstrapping process. probs numeric vector low high confidence interval frequencies,  default = c(0.05, 0.95) (results 90% confidence interval).","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/ciBands.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Interval Band Calculations — ciBands","text":"","code":"library(EGRET) eList <- Choptank_eList nBoot <- 100 blockLength <- 200 if (FALSE) {  repAnnualResults <- vector(mode = \"list\", length = nBoot) for(n in 1:nBoot){    annualResults <- bootAnnual(eList, blockLength, startSeed = n)     repAnnualResults[[n]] <- annualResults }  CIAnnualResults <- ciBands(eList, repAnnualResults) plotConcHistBoot(eList, CIAnnualResults) }"},{"path":"http://usgs-r.github.io/EGRETci/reference/ciCalculations.html","id":null,"dir":"Reference","previous_headings":"","what":"ciCalculations — ciCalculations","title":"ciCalculations — ciCalculations","text":"Function calculate confidence bands flow normalized concentration  flow normalized flux.returns data frame CIAnnualResults, used input functions plotConcHistBoot, plotFluxHistBoot produce graphical output.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/ciCalculations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ciCalculations — ciCalculations","text":"","code":"ciCalculations(eList, startSeed = 494817, verbose = TRUE,   jitterOn = FALSE, V = 0.2, nBoot = 100, blockLength = 200,   widthCI = 90)"},{"path":"http://usgs-r.github.io/EGRETci/reference/ciCalculations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ciCalculations — ciCalculations","text":"eList named list least Daily, Sample, INFO dataframes. Created EGRET package, running modelEstimation. startSeed setSeed value. Defaults 494817. used make repeatable output. verbose logical specifying whether display progress messag, default = TRUE jitterOn logical, TRUE, adds \"jitter\" data attempt avoid numerical problems.  Default = FALSE.  See Details . V numeric multiplier addition jitter data, default = 0.2.  See Details . nBoot number times bootstrap resampling model estimating done. Default 100, take long time. Testing initially done using smaller number like 10. blockLength integer size subset, expressed days.  200 days  found good choice. widthCI numeric, width confidence intervals. 0.9 means  confidence intervals calculated 90%.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/ciCalculations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ciCalculations — ciCalculations","text":"CIAnnualResults data frame following columns   Year, mean decYear value year reported   FNConcLow, lower confidence limit flow normalized concentration, mg/L   FNConcHigh, upper confidence limit flow normalized concentration, mg/L   FNFluxLow, lower confidence limit flow normalized flux, kg   FNFluxLow, lower confidence limit flow normalized flux, kg","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/ciCalculations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ciCalculations — ciCalculations","text":"situations numerical problems encountered bootstrap process, resulting highly unreasonable spikes confidence intervals. use \"jitter\" can often prevent problems, used clearly needed. adds small amount random \"jitter\" explanatory variables WRTDS model.  V parameter sets scale variation log discharge values. standard deviation added jitter V * standard deviation Log Q. default V 0.2.  Larger values generally avoided, smaller values may sufficient. Argument values suggested.   test code nBoot = 10 sufficient, meaningful results nBoot = 100 even nBoot = 500 appropriate. blockLength = 200 widthCI = 90 (90% confidence interval)","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/ciCalculations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ciCalculations — ciCalculations","text":"","code":"library(EGRET) eList <- Choptank_eList if (FALSE) { CIAnnualResults <- ciCalculations(eList,                                   nBoot = 10) plotConcHistBoot(eList, CIAnnualResults)  # run in batch mode, using non-stationary flow normalization # In this example nBoot is set very small, useful for an initial trial run. # A meaningful application would use nBoot values such as 100 or even 500.  seriesOut_2 <- runSeries(eList, windowSide = 11) CIAnnualResults <- ciCalculations(seriesOut_2,                       nBoot = 10,                      blockLength = 200,                      widthCI = 90)                        plotConcHistBoot(seriesOut_2, CIAnnualResults)  }"},{"path":"http://usgs-r.github.io/EGRETci/reference/example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Example eBoot — Choptank_eBoot","title":"Example eBoot — Choptank_eBoot","text":"Example data representing data Choptank River Greensboro, MD,  USGS data Data named list Daily, Sample, INFO dataframes, xConc, xFlux vectors.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/kalman.html","id":null,"dir":"Reference","previous_headings":"","what":"WRTDSKalman Bootstrapping — genDailyBoot","title":"WRTDSKalman Bootstrapping — genDailyBoot","text":"Function get multiple bootstrap replicates daily time step using WRTDS_K method.  done bootstrap resampling original Sample data frame. number replicate samples created called nBoot case WRTDS model estimated.  , models, nKalman time series daily values computed, using sample values original Sample data frame.  total number replicates complete process nBoot * nKalman.  example might generate 500 replicates setting nBoot = 20 nKalman = 25.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/kalman.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WRTDSKalman Bootstrapping — genDailyBoot","text":"","code":"genDailyBoot(eList, nBoot = 10, nKalman = 10, rho = 0.9, setSeed = NA,   jitterOn = FALSE, V = 0.2)"},{"path":"http://usgs-r.github.io/EGRETci/reference/kalman.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WRTDSKalman Bootstrapping — genDailyBoot","text":"eList data fitted model already done. Note eList$Sample  may multiple values given day can also censored values. nBoot number times bootstrap resampling model estimating done. nKalman number different realizations daily time series re-estimated model. rho numeric lag one autocorrelation. Default 0.9. setSeed value. Defaults NA, specify randomized seed. can used make repeatable output. jitterOn logical, TRUE, adds \"jitter\" data attempt avoid numerical problems.  Default = FALSE.  See Details . V numeric multiplier addition jitter data, default = 0.2.  See Details .","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/kalman.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"WRTDSKalman Bootstrapping — genDailyBoot","text":"dailyBootOut matrix daily flux values (kg/day).   number columns matrix number replicates produced nBoot * nKalman number rows number days record.   set days simulated set days eList$Daily data frame.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/kalman.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"WRTDSKalman Bootstrapping — genDailyBoot","text":"situations numerical problems encountered bootstrap process, resulting highly unreasonable spikes confidence intervals. use \"jitter\" can often prevent problems, used clearly needed. adds small amount random \"jitter\" explanatory variables WRTDS model.  V parameter sets scale variation log discharge values. standard deviation added jitter V * standard deviation Log Q. default V 0.2.  Larger values generally avoided, smaller values may sufficient.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/kalman.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"WRTDSKalman Bootstrapping — genDailyBoot","text":"","code":"eList <- EGRET::Choptank_eList # Very long running function: if (FALSE) { dailyBootOut <- genDailyBoot(eList,                              nBoot = 20,                              nKalman = 25) }"},{"path":"http://usgs-r.github.io/EGRETci/reference/makeAnnualPI.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Annual Prediction Intervals — makeAnnualPI","title":"Make Annual Prediction Intervals — makeAnnualPI","text":"function takes output genDailyBoot  calculates quantiles annual (based paStart/paLong) aggregation.  means function can used seasons.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/makeAnnualPI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Annual Prediction Intervals — makeAnnualPI","text":"","code":"makeAnnualPI(dailyBootOut, eList, paLong = 12, paStart = 10,   fluxUnit = 3)"},{"path":"http://usgs-r.github.io/EGRETci/reference/makeAnnualPI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Annual Prediction Intervals — makeAnnualPI","text":"dailyBootOut data frame returned genDailyBoot eList named list least Daily, Sample, INFO  dataframes. Created EGRET package, running modelEstimation. paLong numeric integer specifying length period analysis, months, 1<=paLong<=12, default 12 paStart numeric integer specifying starting month period analysis, 1<=paStart<=12, default 10 fluxUnit number representing entry pre-defined fluxUnit class array.  printFluxUnitCheatSheet","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/makeAnnualPI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Annual Prediction Intervals — makeAnnualPI","text":"list 2 data frames, one average concentration, mg/L one flux (unit depends fluxUnit argument) data frame first column DecYear. remaining columns quantiles flux concentration (depending data frame).","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/makeAnnualPI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Annual Prediction Intervals — makeAnnualPI","text":"","code":"eList <- EGRET::Choptank_eList # This example is only based on 4 iterations # Actual prediction intervals should be calculated on # a much larger number of iterations (several hundred).   dailyBoot <- Choptank_dailyBootOut annualPcts <- makeAnnualPI(dailyBoot, eList) head(annualPcts[[\"flux\"]]) #>    DecYear       p1     p2.5       p5      p10      p25      p50      p75 #> 1 1980.249 300.2398 300.2398 301.8455 307.1477 309.4482 317.7999 330.2232 #> 2 1981.249 153.7898 153.7898 153.9703 158.7941 164.4680 168.8981 175.3665 #> 3 1982.249 262.1990 262.1990 263.3815 268.0285 274.5739 288.0483 296.1632 #> 4 1983.249 323.4122 323.4122 324.8703 332.7810 351.4329 360.9021 369.6140 #> 5 1984.249 387.9003 387.9003 396.3133 417.9942 426.2565 434.0034 446.7875 #> 6 1985.249 120.6924 120.6924 120.9460 122.3459 123.9973 126.8312 131.8363 #>        p90      p95    p97.5      p99 #> 1 347.9412 353.3627 354.7580 354.7580 #> 2 179.5756 181.7312 182.0641 182.0641 #> 3 304.9160 307.9942 308.3691 308.3691 #> 4 385.3095 393.8460 394.9293 394.9293 #> 5 458.4162 461.3039 461.9950 461.9950 #> 6 136.5073 139.2032 139.6815 139.6815 head(annualPcts[[\"conc\"]]) #>    DecYear        p1      p2.5        p5       p10       p25       p50 #> 1 1980.249 0.8943015 0.8943015 0.9002018 0.9160820 0.9359561 0.9669431 #> 2 1981.249 0.9118777 0.9118777 0.9142081 0.9255707 0.9462244 0.9693073 #> 3 1982.249 1.0132666 1.0132666 1.0154235 1.0225617 1.0430828 1.0774149 #> 4 1983.249 0.9298767 0.9298767 0.9345345 0.9510482 0.9844741 1.0125638 #> 5 1984.249 0.9474285 0.9474285 0.9475826 0.9493554 0.9627001 0.9869344 #> 6 1985.249 0.9712238 0.9712238 0.9737614 0.9810472 0.9995361 1.0212897 #>         p75      p90      p95    p97.5      p99 #> 1 0.9980734 1.048386 1.075781 1.085602 1.085602 #> 2 1.0075477 1.028927 1.041497 1.042789 1.042789 #> 3 1.1230733 1.138615 1.142896 1.143837 1.143837 #> 4 1.0489304 1.081274 1.083430 1.083898 1.083898 #> 5 1.0215825 1.039515 1.042340 1.043366 1.043366 #> 6 1.0640089 1.101643 1.115537 1.120401 1.120401"},{"path":"http://usgs-r.github.io/EGRETci/reference/makeDailyPI.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Daily Prediction Intervals — makeDailyPI","title":"Make Daily Prediction Intervals — makeDailyPI","text":"function takes output genDailyBoot  calculates quantiles daily aggregation.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/makeDailyPI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Daily Prediction Intervals — makeDailyPI","text":"","code":"makeDailyPI(dailyBootOut, eList, fluxUnit = 3)"},{"path":"http://usgs-r.github.io/EGRETci/reference/makeDailyPI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Daily Prediction Intervals — makeDailyPI","text":"dailyBootOut data frame returned genDailyBoot eList named list least Daily, Sample, INFO  dataframes. Created EGRET package, running modelEstimation. fluxUnit number representing entry pre-defined fluxUnit class array.  printFluxUnitCheatSheet","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/makeDailyPI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Daily Prediction Intervals — makeDailyPI","text":"list 2 data frames, one average concentration, mg/L one flux (unit depends fluxUnit argument) data frame first column Date. remaining columns quantiles flux concentration (depending data frame).","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/makeDailyPI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Daily Prediction Intervals — makeDailyPI","text":"","code":"eList <- EGRET::Choptank_eList # This example is only based on 4 iterations # Actual prediction intervals should be calculated on # a much larger number of iterations (several hundred). dailyBoot <- Choptank_dailyBootOut # \\donttest{ dailyPcts <- makeDailyPI(dailyBoot, eList) head(dailyPcts[[\"flux\"]]) #>         Date  DecYear        p1      p2.5       p5      p10      p25      p50 #> 1 1979-10-01 1979.750 108.85328 108.85328 110.7387 117.4744 128.0440 136.3389 #> 2 1979-10-02 1979.753  99.24955  99.24955 104.9431 119.9514 128.1189 143.2019 #> 3 1979-10-03 1979.755 122.53540 122.53540 124.0501 131.8080 149.0372 166.6936 #> 4 1979-10-04 1979.758 155.71447 155.71447 157.5686 163.1568 178.8756 203.0882 #> 5 1979-10-05 1979.761 150.59668 150.59668 150.6070 160.7641 195.2427 210.0535 #> 6 1979-10-06 1979.764 121.47619 121.47619 126.5504 141.3553 170.2329 182.8105 #>        p75      p90      p95    p97.5      p99 #> 1 146.1200 155.5465 157.3203 157.9757 157.9757 #> 2 150.6974 163.4249 168.5032 168.9131 168.9131 #> 3 194.4266 205.3892 213.5120 216.5846 216.5846 #> 4 222.5818 236.7537 248.6268 252.6469 252.6469 #> 5 246.5143 268.4792 270.6394 270.7597 270.7597 #> 6 212.2932 231.9834 261.7761 272.9430 272.9430 head(dailyPcts[[\"conc\"]]) #>         Date  DecYear        p1      p2.5        p5       p10       p25 #> 1 1979-10-01 1979.750 0.6640612 0.6640612 0.6755632 0.7166547 0.7811343 #> 2 1979-10-02 1979.753 0.5713623 0.5713623 0.6041392 0.6905393 0.7375578 #> 3 1979-10-03 1979.755 0.5163346 0.5163346 0.5227170 0.5554072 0.6280067 #> 4 1979-10-04 1979.758 0.4679845 0.4679845 0.4735570 0.4903516 0.5375929 #> 5 1979-10-05 1979.761 0.4274588 0.4274588 0.4274880 0.4563184 0.5541836 #> 6 1979-10-06 1979.764 0.4393940 0.4393940 0.4577480 0.5112991 0.6157527 #>         p50       p75       p90       p95     p97.5       p99 #> 1 0.8317377 0.8914077 0.9489137 0.9597352 0.9637333 0.9637333 #> 2 0.8243882 0.8675388 0.9408086 0.9700432 0.9724031 0.9724031 #> 3 0.7024065 0.8192667 0.8654604 0.8996881 0.9126353 0.9126353 #> 4 0.6103617 0.6689477 0.7115400 0.7472232 0.7593053 0.7593053 #> 5 0.5962231 0.6997147 0.7620608 0.7681922 0.7685336 0.7685336 #> 6 0.6612476 0.7678900 0.8391119 0.9468756 0.9872676 0.9872676 # }"},{"path":"http://usgs-r.github.io/EGRETci/reference/makeMonthPI.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Monthly Prediction Intervals — makeMonthPI","title":"Make Monthly Prediction Intervals — makeMonthPI","text":"Month statistics using WRTDSKalman bootstrapping approach.  input function dailyBootOut matrix contains nReplicate sets  daily flux values period interest. results form quantiles concentration flux  months.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/makeMonthPI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Monthly Prediction Intervals — makeMonthPI","text":"","code":"makeMonthPI(dailyBootOut, eList, fluxUnit = 3)"},{"path":"http://usgs-r.github.io/EGRETci/reference/makeMonthPI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Monthly Prediction Intervals — makeMonthPI","text":"dailyBootOut data frame returned genDailyBoot eList named list least Daily, Sample, INFO  dataframes. Created EGRET package, running modelEstimation. fluxUnit number representing entry pre-defined fluxUnit class array.  printFluxUnitCheatSheet","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/makeMonthPI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Monthly Prediction Intervals — makeMonthPI","text":"list 2 data frames, one average concentration, mg/L one flux (unit depends fluxUnit argument) data frame first column monthSeq corresponds months \"MonthSeq\" column eList$Daily data frame. remaining columns quantiles flux concentration (depending data frame).","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/makeMonthPI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Monthly Prediction Intervals — makeMonthPI","text":"","code":"eList <- EGRET::Choptank_eList # This example is only based on 4 iterations # Actual prediction intervals should be calculated on # a much larger number of iterations (several hundred).  dailyBoot <- Choptank_dailyBootOut monthPcts <- makeMonthPI(dailyBoot, eList) head(monthPcts[[\"flux\"]]) #>   monthSeq  DecYear       p1     p2.5       p5      p10      p25      p50 #> 1     1558 1979.791 189.3758 189.3758 190.0509 194.0402 203.6860 220.9693 #> 2     1559 1979.874 274.0057 274.0057 279.5923 292.7802 321.9846 347.7123 #> 3     1560 1979.958 320.2276 320.2276 322.0916 331.4465 353.6233 371.3428 #> 4     1561 1980.042 387.0260 387.0260 402.9150 440.1296 479.7443 531.9095 #> 5     1562 1980.124 222.5161 222.5161 224.2839 237.7090 262.8306 276.7311 #> 6     1563 1980.206 484.8060 484.8060 488.7506 501.1748 538.7471 567.7995 #>        p75      p90      p95    p97.5      p99 #> 1 231.6290 240.7188 250.9379 254.9164 254.9164 #> 2 383.8867 399.5109 407.4356 408.3045 408.3045 #> 3 388.5917 433.4687 452.6538 454.5950 454.5950 #> 4 569.9550 613.1411 637.7940 641.3565 641.3565 #> 5 297.8663 326.5420 332.9281 333.9185 333.9185 #> 6 607.0096 650.6549 673.9090 676.1889 676.1889 head(monthPcts[[\"conc\"]]) #>   monthSeq  DecYear        p1      p2.5        p5       p10       p25       p50 #> 1     1558 1979.791 0.4346988 0.4346988 0.4362485 0.4454055 0.4675470 0.5072194 #> 2     1559 1979.874 0.6009423 0.6009423 0.6131947 0.6421180 0.7061684 0.7625937 #> 3     1560 1979.958 1.0577505 1.0577505 1.0639076 1.0948077 1.1680604 1.2265903 #> 4     1561 1980.042 0.7145444 0.7145444 0.7438794 0.8125865 0.8857250 0.9820346 #> 5     1562 1980.124 0.9209325 0.9209325 0.9282489 0.9838118 1.0877832 1.1453134 #> 6     1563 1980.206 0.7474892 0.7474892 0.7535711 0.7727271 0.8306573 0.8754511 #>         p75       p90       p95     p97.5       p99 #> 1 0.5316880 0.5525532 0.5760103 0.5851426 0.5851426 #> 2 0.8419304 0.8761971 0.8935774 0.8954828 0.8954828 #> 3 1.2835653 1.4317995 1.4951701 1.5015822 1.5015822 #> 4 1.0522758 1.1320081 1.1775233 1.1841005 1.1841005 #> 5 1.2327861 1.3514670 1.3778972 1.3819961 1.3819961 #> 6 0.9359065 1.0032003 1.0390541 1.0425694 1.0425694"},{"path":"http://usgs-r.github.io/EGRETci/reference/monthSeqToDec.html","id":null,"dir":"Reference","previous_headings":"","what":"monthSeqToDec — monthSeqToDec","title":"monthSeqToDec — monthSeqToDec","text":"Convert sequence month integers decimal years.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/monthSeqToDec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"monthSeqToDec — monthSeqToDec","text":"","code":"monthSeqToDec(monthSeq)"},{"path":"http://usgs-r.github.io/EGRETci/reference/monthSeqToDec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"monthSeqToDec — monthSeqToDec","text":"monthSeq integer vector months. Month 1 considered Jan. 1850.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/monthSeqToDec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"monthSeqToDec — monthSeqToDec","text":"","code":"months <- 1558:1600 monthSeqToDec(months) #>  [1] 1979.792 1979.875 1979.958 1980.042 1980.125 1980.208 1980.292 1980.375 #>  [9] 1980.458 1980.542 1980.625 1980.708 1980.792 1980.875 1980.958 1981.042 #> [17] 1981.125 1981.208 1981.292 1981.375 1981.458 1981.542 1981.625 1981.708 #> [25] 1981.792 1981.875 1981.958 1982.042 1982.125 1982.208 1982.292 1982.375 #> [33] 1982.458 1982.542 1982.625 1982.708 1982.792 1982.875 1982.958 1983.042 #> [41] 1983.125 1983.208 1983.292"},{"path":"http://usgs-r.github.io/EGRETci/reference/pVal.html","id":null,"dir":"Reference","previous_headings":"","what":"pVal — pVal","title":"pVal — pVal","text":"Computes two-sided p value null hypothesis, null  hypothesis slope zero.  based binomial distribution.  Note result depend magnitude individual slope  values depends number positive slopes number negative slopes.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/pVal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pVal — pVal","text":"","code":"pVal(s)"},{"path":"http://usgs-r.github.io/EGRETci/reference/pVal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pVal — pVal","text":"s numeric vector slope values bootstrap","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/pVal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"pVal — pVal","text":"pVal numeric value","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/pVal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"pVal — pVal","text":"","code":"s <- c(-1.0, 0, 0.5, 0.55, 3.0) pValue <- pVal(s)"},{"path":"http://usgs-r.github.io/EGRETci/reference/plotConcHistBoot.html","id":null,"dir":"Reference","previous_headings":"","what":"Graph of annual concentration, flow normalized concentration, \nand confidence bands for flow normalized concentrations — plotConcHistBoot","title":"Graph of annual concentration, flow normalized concentration, \nand confidence bands for flow normalized concentrations — plotConcHistBoot","text":"Uses output modelEstimation EGRET package (results named  list eList), data frame CIAnnualResults (produced function ciCalculations EGRETci package  using scripts described EGRETci vignette) produce graph annual  concentration, flow normalized concentration, confidence bands  flow-normalized concentrations.  addition arguments listed ,  accept additional arguments listed EGRET function  plotConcHist.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/plotConcHistBoot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graph of annual concentration, flow normalized concentration, \nand confidence bands for flow normalized concentrations — plotConcHistBoot","text":"","code":"plotConcHistBoot(eList, CIAnnualResults, yearStart = NA, yearEnd = NA,   plotFlowNorm = TRUE, col.pred = \"green\", concMax = NA,   plotAnnual = TRUE, plotGenConc = FALSE, cex = 0.8, cex.axis = 1.1,   lwd = 2, col = \"black\", col.gen = \"red\", customPar = FALSE,   printTitle = TRUE, cex.main = 1.1, ...)"},{"path":"http://usgs-r.github.io/EGRETci/reference/plotConcHistBoot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Graph of annual concentration, flow normalized concentration, \nand confidence bands for flow normalized concentrations — plotConcHistBoot","text":"eList named list least Daily, Sample, INFO dataframes. Created EGRET package, running modelEstimation. CIAnnualResults data frame generated ciBands (includes nBoot, probs, blockLength attributes). yearStart numeric calendar year containing first estimated annual value plotted, default NA (allows set automatically data). yearEnd numeric calendar year just last estimated annual value plotted, default NA (allows set automatically data). plotFlowNorm logical variable TRUE flow normalized concentration line plotted, FALSE plotted, default TRUE. col.pred character color line flow-normalized concentration confidence limits, default \"green\". concMax numeric specifying maximum value used vertical axis, default NA (allows set automatically data). plotAnnual logical variable TRUE, annual mean concentration points WRTDS output plotted, FALSE plotted. plotGenConc logical variable. TRUE, annual mean concentration points WRTDS_K output plotted, FALSE plotted. cex numeric value giving amount plotting symbols magnified, default = 0.8. cex.axis numeric value magnification used axis annotation relative current setting cex, default = 1.1. lwd numeric magnification line width, default = 2. col color annual mean points plot, see ?par 'Color Specification', default = \"black\". col.gen color annual mean points WRTDS_K output plot, see ?par 'Color Specification', default = \"red\". customPar logical defaults FALSE. TRUE, par() set user calling function  (example, adjusting margins par(mar=c(5,5,5,5))). customPar FALSE, EGRETci chooses best margins. printTitle logical print title plot, default = TRUE. cex.main numeric value magnification used plot title, default = 1.1. ... graphical parameters","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/plotConcHistBoot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Graph of annual concentration, flow normalized concentration, \nand confidence bands for flow normalized concentrations — plotConcHistBoot","text":"","code":"library(EGRET) eList <- Choptank_eList CIAnnualResults <- Choptank_CIAnnualResults plotConcHistBoot(eList, CIAnnualResults)  plotConcHistBoot(eList, CIAnnualResults, yearStart=1990, yearEnd=2002)  # Very long-running function: if (FALSE) { CIAnnualResults <- ciCalculations(eList, nBoot = 100, blockLength = 200) plotConcHistBoot(eList, CIAnnualResults) }"},{"path":"http://usgs-r.github.io/EGRETci/reference/plotFluxHistBoot.html","id":null,"dir":"Reference","previous_headings":"","what":"Graph of annual flux, flow normalized flux, and confidence bands for flow normalized flux — plotFluxHistBoot","title":"Graph of annual flux, flow normalized flux, and confidence bands for flow normalized flux — plotFluxHistBoot","text":"Uses output modelEstimation EGRET package (results named list eList),  data frame CIAnnualResults (produced EGRETci package using scripts described  vignette) produce graph annual flux, flow normalized flux, confidence bands  flow-normalized flux. addition arguments listed , accept  additional arguments listed EGRET function plotFluxHist.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/plotFluxHistBoot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graph of annual flux, flow normalized flux, and confidence bands for flow normalized flux — plotFluxHistBoot","text":"","code":"plotFluxHistBoot(eList, CIAnnualResults, yearStart = NA, yearEnd = NA,   fluxUnit = 9, fluxMax = NA, plotFlowNorm = TRUE, col.pred = \"green\",   plotAnnual = TRUE, plotGenFlux = FALSE, cex = 0.8, cex.axis = 1.1,   lwd = 2, col = \"black\", col.gen = \"red\", cex.main = 1.1,   printTitle = TRUE, customPar = FALSE, ...)"},{"path":"http://usgs-r.github.io/EGRETci/reference/plotFluxHistBoot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Graph of annual flux, flow normalized flux, and confidence bands for flow normalized flux — plotFluxHistBoot","text":"eList named list least Daily, Sample, INFO dataframes. Created EGRET package, running modelEstimation. CIAnnualResults data frame ciBands (needs nBoot, probs, blockLength attributes). yearStart numeric calendar year containing first estimated annual value plotted, default NA (allows set automatically data). yearEnd numeric calendar year just last estimated annual value plotted, default NA (allows set automatically data). fluxUnit integer representing entry pre-defined fluxUnit class array. printFluxUnitCheatSheet fluxMax numeric specifying maximum value used vertical axis, default NA (allows set automatically data), uses units specificed fluxUnit. plotFlowNorm logical variable TRUE flow normalized flux line plotted, FALSE plotted, default TRUE. col.pred character color line flow-normalized flux confidence limits, default \"green\". plotAnnual logical variable TRUE, annual mean flux points WRTDS output plotted, FALSE plotted. plotGenFlux logical variable. TRUE, annual mean flux points WRTDS_K output plotted, FALSE plotted. cex numeric value giving amount plotting symbols magnified, default = 0.8. cex.axis numeric magnification used axis annotation relative current setting cex, default = 1.1. lwd numeric magnification line width, default = 2. col color annual mean points plot, see ?par 'Color Specification', default = \"black\". col.gen color annual mean points WRTDS_K output plot, see ?par 'Color Specification', default = \"red\". cex.main numeric title scale printTitle logical print title plot, default = TRUE. customPar logical defaults FALSE. TRUE, par() set user calling function  (example, adjusting margins par(mar=c(5,5,5,5))). customPar FALSE, EGRET chooses best margins. ... graphical parameters","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/plotFluxHistBoot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Graph of annual flux, flow normalized flux, and confidence bands for flow normalized flux — plotFluxHistBoot","text":"","code":"library(EGRET) eList <- Choptank_eList  CIAnnualResults <- Choptank_CIAnnualResults plotFluxHistBoot(eList, CIAnnualResults, fluxUnit=5)   if (FALSE) { CIAnnualResults <- ciCalculations(eList, nBoot = 100, blockLength = 200) plotFluxHistBoot(eList, CIAnnualResults, fluxUnit=5) }"},{"path":"http://usgs-r.github.io/EGRETci/reference/plotHistogramTrend.html","id":null,"dir":"Reference","previous_headings":"","what":"plotHistogramTrend — plotHistogramTrend","title":"plotHistogramTrend — plotHistogramTrend","text":"Produces histogram trend results bootstrap process.  histogram shows trend results expressed percentage change first year (first period)  second year (second period).  shows zero line (trend) also shows WRTDS  estimate trend percent.  based output either wBT  runPairsBoot.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/plotHistogramTrend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotHistogramTrend — plotHistogramTrend","text":"","code":"plotHistogramTrend(eList, eBoot, caseSetUp, flux = TRUE, xMin = NA,   xMax = NA, xStep = NA, printTitle = TRUE, cex.main = 1.1,   cex.axis = 1.1, cex.lab = 1.1, col.fill = \"grey\", ...)"},{"path":"http://usgs-r.github.io/EGRETci/reference/plotHistogramTrend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotHistogramTrend — plotHistogramTrend","text":"eList named list least Daily, Sample, INFO dataframes. Created EGRET package, running modelEstimation. eBoot named list. Returned wBT runPairsBoot. caseSetUp data frame. Returned trendSetUp, runPairsBoot used, need specify caseSetUp = NA. flux logical TRUE, plots flux results, FALSE plots concentration results. xMin minimum bin value histogram, good xMin xMax arguments straddle zero, default NA (value set data). xMax maximum bin value histogram, default NA (value set data). xStep step size, typically multiples 10 20, default NA (value set data). printTitle logical TRUE, plot includes title. cex.main numeric magnification font size title, default 1.1. cex.axis numeric magnification font size axis, default 1.1. cex.lab numeric magnification font size axis labels, default 1.1. col.fill character fill color histogram, default \"grey\". ... base R graphical parameters can passed hist function","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/plotHistogramTrend.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plotHistogramTrend — plotHistogramTrend","text":"given set results (eBoot) best run first arguments xMin = NA, xMax = NA, xStep = NA.  , observing range histogram covers can run values three arguments selected user provide readable version histogram.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/plotHistogramTrend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plotHistogramTrend — plotHistogramTrend","text":"","code":"library(EGRET) eList <- Choptank_eList eBoot <- Choptank_eBoot caseSetUp <- Choptank_caseSetUp plotHistogramTrend(eList, eBoot, caseSetUp, flux = FALSE)   if (FALSE) { # Using wBT:   caseSetUp <- trendSetUp(eList) eBoot <- wBT(eList,caseSetUp) plotHistogramTrend(eList, eBoot, caseSetUp,                      flux = FALSE, xMin = -20, xMax = 60, xStep = 5) plotHistogramTrend(eList, eBoot, caseSetUp,                     flux = TRUE, xMin = -20, xMax = 60, xStep = 5)     # Using runPairs followed by runPairsBoot: year1 <- 1985 year2 <- 2009           pairOut_2 <- runPairs(eList, year1, year2, windowSide = 7) boot_pair_out <- runPairsBoot(eList, pairOut_2, nBoot = 10)  plotHistogramTrend(eList, boot_pair_out, caseSetUp = NA,                     flux = TRUE, xMin = -20, xMax = 60, xStep = 5)           }"},{"path":"http://usgs-r.github.io/EGRETci/reference/runGroupsBoot.html","id":null,"dir":"Reference","previous_headings":"","what":"The bootstrap uncertainty analysis for runGroups results — runGroupsBoot","title":"The bootstrap uncertainty analysis for runGroups results — runGroupsBoot","text":"function uncertainty analysis determining change  two groups years.  process virtually  identical used runPairsBoot looks change pair years.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/runGroupsBoot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The bootstrap uncertainty analysis for runGroups results — runGroupsBoot","text":"","code":"runGroupsBoot(eList, groupResults, nBoot = 100, startSeed = 494817,   blockLength = 200, jitterOn = FALSE, V = 0.2)"},{"path":"http://usgs-r.github.io/EGRETci/reference/runGroupsBoot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The bootstrap uncertainty analysis for runGroups results — runGroupsBoot","text":"eList named list least Daily, Sample, INFO dataframes groupResults data frame returned runGroups nBoot maximum number bootstrap replicates used, typically 100 startSeed setSeed value. Defaults 494817. used make repeatable output. blockLength integer size subset, expressed days.  200 days found good choice. jitterOn logical, TRUE, adds \"jitter\" data attempt avoid numerical problems. Default = FALSE.  See Details . V numeric multiplier addition jitter data, default = 0.2.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/runGroupsBoot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The bootstrap uncertainty analysis for runGroups results — runGroupsBoot","text":"eBoot, named list bootOut, wordsOut, xConc, xFlux, pConc, pFlux values. bootOut data frame results bootstrap test. wordsOut character vector describing results. xConc xFlux vectors length iBoot, change flow normalized concentration    flow normalized flux computed bootstrap replicates. pConc pFlux vectors length iBoot, change flow normalized concentration    flow normalized flux computed bootstrap replicates expressed % change.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/runGroupsBoot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The bootstrap uncertainty analysis for runGroups results — runGroupsBoot","text":"situations numerical problems encountered bootstrap process, resulting highly unreasonable spikes confidence intervals. use \"jitter\" can often prevent problems, used clearly needed. adds small amount random \"jitter\" explanatory variables WRTDS model.  V parameter sets scale variation log discharge values. standard deviation added jitter V * standard deviation Log Q. default V 0.2.  Larger values generally avoided, smaller values may sufficient.","code":""},{"path":[]},{"path":"http://usgs-r.github.io/EGRETci/reference/runGroupsBoot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The bootstrap uncertainty analysis for runGroups results — runGroupsBoot","text":"","code":"library(EGRET) eList <- Choptank_eList  if (FALSE) { groupResults <- runGroups(eList,                            group1firstYear = 1995,                            group1lastYear = 2004,                            group2firstYear = 2005,                            group2lastYear = 2014,                            windowSide = 7, wall = TRUE,                            sample1EndDate = \"2004-10-30\",                            paStart = 4, paLong = 2,                            verbose = FALSE)  boot_group_out <- runGroupsBoot(eList, groupResults)  plotHistogramTrend(eList, boot_group_out, caseSetUp=NA) }"},{"path":"http://usgs-r.github.io/EGRETci/reference/runPairsBoot.html","id":null,"dir":"Reference","previous_headings":"","what":"The bootstrap uncertainty analysis for runPairs results — runPairsBoot","title":"The bootstrap uncertainty analysis for runPairs results — runPairsBoot","text":"function uncertainty analysis determining change  pair years.  similar wBT function runs WRTDS  bootstrap test.  differs wBT runs specific number  bootstrap replicates, unlike wBT approach stop running replicates  based status test statistics along way.  Also, code can used generalized flow normalization, handles non-stationary discharge,  whereas wBT .","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/runPairsBoot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The bootstrap uncertainty analysis for runPairs results — runPairsBoot","text":"","code":"runPairsBoot(eList, pairResults, nBoot = 100, startSeed = 494817,   blockLength = 200, jitterOn = FALSE, V = 0.2)"},{"path":"http://usgs-r.github.io/EGRETci/reference/runPairsBoot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The bootstrap uncertainty analysis for runPairs results — runPairsBoot","text":"eList named list least Daily, Sample, INFO dataframes pairResults data frame returned runPairs nBoot maximum number bootstrap replicates used, typically 100 startSeed setSeed value. Defaults 494817. used make repeatable output. blockLength integer size subset, expressed days.  200 days found good choice. jitterOn logical, TRUE, adds \"jitter\" data attempt avoid numerical problems.  Default = FALSE.  See Details . V numeric multiplier addition jitter data, default = 0.2.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/runPairsBoot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The bootstrap uncertainty analysis for runPairs results — runPairsBoot","text":"eBoot, named list bootOut, wordsOut, xConc, xFlux, pConc, pFlux values. bootOut data frame results bootstrap test. wordsOut character vector describing results. xConc xFlux vectors length iBoot, change flow normalized concentration    flow normalized flux computed bootstrap replicates. pConc pFlux vectors length iBoot, change flow normalized concentration    flow normalized flux computed bootstrap replicates expressed % change.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/runPairsBoot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The bootstrap uncertainty analysis for runPairs results — runPairsBoot","text":"situations numerical problems encountered bootstrap process, resulting highly unreasonable spikes confidence intervals. use \"jitter\" can often prevent problems, used clearly needed. adds small amount random \"jitter\" explanatory variables WRTDS model.  V parameter sets scale variation log discharge values. standard deviation added jitter V * standard deviation Log Q. default V 0.2.  Larger values generally avoided, smaller values may sufficient.","code":""},{"path":[]},{"path":"http://usgs-r.github.io/EGRETci/reference/runPairsBoot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The bootstrap uncertainty analysis for runPairs results — runPairsBoot","text":"","code":"library(EGRET) eList <- Choptank_eList year1 <- 1985 year2 <- 2009  if (FALSE) { pairOut_2 <- runPairs(eList, year1, year2, windowSide = 7)  boot_pair_out <- runPairsBoot(eList, pairOut_2)  plotHistogramTrend(eList, boot_pair_out, caseSetUp = NA) }"},{"path":"http://usgs-r.github.io/EGRETci/reference/saveEGRETci.html","id":null,"dir":"Reference","previous_headings":"","what":"Save EGRETci workspace after running wBT (the WRTDS bootstrap test) — saveEGRETci","title":"Save EGRETci workspace after running wBT (the WRTDS bootstrap test) — saveEGRETci","text":"Saves critical information EGRETci workflow analyzing trends starting ending year.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/saveEGRETci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save EGRETci workspace after running wBT (the WRTDS bootstrap test) — saveEGRETci","text":"","code":"saveEGRETci(eList, eBoot, caseSetUp, fileName = \"\")"},{"path":"http://usgs-r.github.io/EGRETci/reference/saveEGRETci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save EGRETci workspace after running wBT (the WRTDS bootstrap test) — saveEGRETci","text":"eList named list least Daily, Sample, INFO dataframes. Created EGRET package, running modelEstimation. eBoot named list. Returned wBT. caseSetUp data frame. Returned trendSetUp. fileName character. left blank (empty quotes), function interactively ask name save.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/saveEGRETci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save EGRETci workspace after running wBT (the WRTDS bootstrap test) — saveEGRETci","text":".RData file containing three objects: eList, eBoot, caseSetUp","code":""},{"path":[]},{"path":"http://usgs-r.github.io/EGRETci/reference/saveEGRETci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save EGRETci workspace after running wBT (the WRTDS bootstrap test) — saveEGRETci","text":"","code":"eList <- EGRET::Choptank_eList if (FALSE) { caseSetUp <- trendSetUp(eList) eBoot <- wBT(eList,caseSetUp) saveEGRETci(eList, eBoot, caseSetUp) }"},{"path":"http://usgs-r.github.io/EGRETci/reference/setForBoot.html","id":null,"dir":"Reference","previous_headings":"","what":"Allows user to set window parameters for the WRTDS model prior to running the bootstrap procedure — setForBoot","title":"Allows user to set window parameters for the WRTDS model prior to running the bootstrap procedure — setForBoot","text":"Adds window parameters INFO file eList.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/setForBoot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Allows user to set window parameters for the WRTDS model prior to running the bootstrap procedure — setForBoot","text":"","code":"setForBoot(eList, caseSetUp, windowY = 7, windowQ = 2, windowS = 0.5,   edgeAdjust = TRUE)"},{"path":"http://usgs-r.github.io/EGRETci/reference/setForBoot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Allows user to set window parameters for the WRTDS model prior to running the bootstrap procedure — setForBoot","text":"eList named list least Daily, Sample, INFO dataframes. Created EGRET package, running modelEstimation. caseSetUp data frame returned trendSetUp. windowY numeric specifying half-window width time dimension, units years, default 7. windowQ numeric specifying half-window width discharge dimension, units natural log units, default 2. windowS numeric specifying half-window seasonal dimension, units years, default 0.5. edgeAdjust logical specifying whether use modified method calculating windows edge record, default TRUE.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/setForBoot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Allows user to set window parameters for the WRTDS model prior to running the bootstrap procedure — setForBoot","text":"eList list Daily,Sample, INFO data frames surface matrix.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/setForBoot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Allows user to set window parameters for the WRTDS model prior to running the bootstrap procedure — setForBoot","text":"","code":"eList <- EGRET::Choptank_eList  caseSetUp <- trendSetUp(eList,   year1=1985,    year2=2005,   nBoot = 50,    bootBreak = 39,   blockLength = 200) #> Sample set runs from 1979 to 2011 #> year1 = 1985 this is the first water year of trend period #> year2 = 2005 this is the last water year of trend period #> nBoot = 50 this is the maximum number of replicates that will be run #> bootBreak = 39 this is the minimum number of replicates that will be run #> blockLength = 200 this is the number of days in a bootstrap block  bootSetUp <- setForBoot(eList,caseSetUp)"},{"path":"http://usgs-r.github.io/EGRETci/reference/trendSetUp.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive setup for running wBT, the WRTDS Bootstrap Test — trendSetUp","title":"Interactive setup for running wBT, the WRTDS Bootstrap Test — trendSetUp","text":"Walks user set-WRTDS Bootstrap Test.  Establishes  start end year test period.  Sets minimum number  bootstrap replicates run, maximum number bootstrap replicates  run, block length (days) block bootstrapping. test designed evaluate uncertainty trend pair years.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/trendSetUp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive setup for running wBT, the WRTDS Bootstrap Test — trendSetUp","text":"","code":"trendSetUp(eList, ...)"},{"path":"http://usgs-r.github.io/EGRETci/reference/trendSetUp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive setup for running wBT, the WRTDS Bootstrap Test — trendSetUp","text":"eList named list least Daily, Sample, INFO dataframes. Created EGRET package, running modelEstimation. ... additional arguments bring reduce interactive options  (year1, year2, nBoot, bootBreak, blockLength)","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/trendSetUp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactive setup for running wBT, the WRTDS Bootstrap Test — trendSetUp","text":"caseSetUp data frame columns year1, yearData1, year2, yearData2,  numSamples, nBoot, bootBreak, blockLength, confStop. correspond :","code":""},{"path":[]},{"path":"http://usgs-r.github.io/EGRETci/reference/trendSetUp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactive setup for running wBT, the WRTDS Bootstrap Test — trendSetUp","text":"","code":"eList <- EGRET::Choptank_eList  # Completely interactive: # caseSetUp <- trendSetUp(eList) # Semi-interactive: # caseSetUp <- trendSetUp(eList, nBoot = 100, blockLength = 200)  # fully scripted: caseSetUp <- trendSetUp(eList,   year1=1985,    year2=2005,   nBoot = 50,    bootBreak = 39,   blockLength = 200) #> Sample set runs from 1979 to 2011 #> year1 = 1985 this is the first water year of trend period #> year2 = 2005 this is the last water year of trend period #> nBoot = 50 this is the maximum number of replicates that will be run #> bootBreak = 39 this is the minimum number of replicates that will be run #> blockLength = 200 this is the number of days in a bootstrap block"},{"path":"http://usgs-r.github.io/EGRETci/reference/wBT.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the WBT (WRTDS Bootstrap Test) — wBT","title":"Run the WBT (WRTDS Bootstrap Test) — wBT","text":"Runs WBT given data set evaluate significance level  confidence intervals trends two specified years.  trends  evaluated trends flow normalized concentration flow normalized flux.   Function produces text outputs named list (eBoot) contains  relevant outputs. Check runPairsBoot runGroupsBoot bootstrapping options.  wBT runs stationary flow normalization (.e. making assumption discharge stationary).   runPairsBoot runGroupsBoot allow generalized flow normalization (.e. non-stationary discharge).","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/wBT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the WBT (WRTDS Bootstrap Test) — wBT","text":"","code":"wBT(eList, caseSetUp, saveOutput = TRUE, fileName = \"temp.txt\",   startSeed = 494817, jitterOn = FALSE, V = 0.2)"},{"path":"http://usgs-r.github.io/EGRETci/reference/wBT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the WBT (WRTDS Bootstrap Test) — wBT","text":"eList named list least Daily, Sample, INFO dataframes. Created EGRET package, running modelEstimation. caseSetUp data frame. Returned trendSetUp. saveOutput logical. TRUE, text file saved working directory. fileName character. Name save output file saveOutput=TRUE. startSeed setSeed value. Defaults 494817. used make repeatable output. jitterOn logical, TRUE, adds \"jitter\" data attempt avoid numerical problems.  Default = FALSE.  See Details . V numeric multiplier addition jitter data, default = 0.2.  See Details .","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/wBT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the WBT (WRTDS Bootstrap Test) — wBT","text":"eBoot, named list bootOut, wordsOut, xConc, xFlux, pConc, pFlux values.","code":""},{"path":"http://usgs-r.github.io/EGRETci/reference/wBT.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run the WBT (WRTDS Bootstrap Test) — wBT","text":"situations numerical problems encountered bootstrap process, resulting highly unreasonable spikes confidence intervals. use \"jitter\" can often prevent problems, used clearly needed. adds small amount random \"jitter\" explanatory variables WRTDS model.  V parameter sets scale variation log discharge values. standard deviation added jitter V * standard deviation Log Q. default V 0.2.  Larger values generally avoided, smaller values may sufficient.","code":""},{"path":[]},{"path":"http://usgs-r.github.io/EGRETci/reference/wBT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the WBT (WRTDS Bootstrap Test) — wBT","text":"","code":"eList <- EGRET::Choptank_eList caseSetUp <- trendSetUp(eList,                         year1 = 1985,                          year2 = 2005,                         nBoot = 50,                          bootBreak = 39,                         blockLength = 200) #> Sample set runs from 1979 to 2011 #> year1 = 1985 this is the first water year of trend period #> year2 = 2005 this is the last water year of trend period #> nBoot = 50 this is the maximum number of replicates that will be run #> bootBreak = 39 this is the minimum number of replicates that will be run #> blockLength = 200 this is the number of days in a bootstrap block # Very long-running function:                      if (FALSE) { eBoot <- wBT(eList,caseSetUp) }"}]
